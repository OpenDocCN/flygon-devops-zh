["```\n$ git clone https://github.com/mitsuhiko/flask\n\n```", "```\n$ cat /tmp/ Dockerfile_2.7\nFROM python:2.7\nRUN pip install flask\nRUN pip install pytest\nWORKDIR /test\nCMD [\"/usr/local/bin/py.test\"]\n\n```", "```\n$ docker build -t python2.7test - < /tmp/Dockerfile_2.7\n\n```", "```\n$ cat /tmp/Dockerfile_3.3\nFROM python:3.3\nRUN pip install flask\nRUN pip install pytest\nWORKDIR /test\nCMD [\"/usr/local/bin/py.test\"]\n\n```", "```\n$ docker build -t python3.3test  - < /tmp/Dockerfile_3.3\n\n```", "```\n$ cd /tmp/flask/examples/\n\n```", "```\n$ docker run -d -v `pwd`/blueprintexample:/test python2.7test\n\n```", "```\n $ docker run -d -v `pwd`/blueprintexample:/test python3.3test\n\n```", "```\n$ docker run -d -v `pwd`/blueprintexample:/test:z python2.7test\n\n```", "```\n$ git clone git@github.com:nkhare/flask-example.git\n\n```", "```\n$ git clone https://github.com/mitsuhiko/flask.git\n\n```", "```\n$ cp -Rv flask/examples/blueprintexample/* flask-example/wsgi/\n\n```", "```\nfrom blueprintexample import app as application\n```", "```\nflask \npytest\n```", "```\nlanguage: python \n\npython: \n  - 2.6 \n  - 2.7 \n\ninstall: \n  - pip install -r requirements.txt \n\n# Make folders for the reports \nbefore_script: \n  - mkdir -p shippable/testresults \n  - mkdir -p shippable/codecoverage \n\nscript: \n  - py.test \n\narchive: true \n```", "```\nenv: \n  global: \n    - **OPENSHIFT_REPO**=ssh://545ea4964382ec337f000009@blueprint-neependra.rhcloud.com/~/git/blueprint.git \n\nlanguage: python \n\npython: \n  - 2.6 \n  - 2.7 \n\ninstall: \n  - pip install -r requirements.txt \n\n# Make folders for the reports \nbefore_script: \n  - mkdir -p shippable/testresults \n  - mkdir -p shippable/codecoverage \n  - git remote -v | grep ^openshift || git remote add openshift $OPENSHIFT_REPO \n  - cd wsgi \n\nscript: \n  - py.test \n\nafter_success: \n  - git push -f openshift $BRANCH:master \n\narchive: true \n```", "```\npip install -r requirements.txt --use-mirrors\ncd wsgi\npy.test\n\n```", "```\n$ git clone https://github.com/openshift/origin.git\n\n```", "```\n$ cd origin\n$ git checkout tags/v0.4.3\n\n```", "```\n$ vagrant up --provider=virtualbox\n\n```", "```\n$ vagrant ssh\n\n```", "```\n$ cd /data/src/github.com/openshift/origin\n$ make clean build\n\n```", "```\n$  cd /data/src/github.com/openshift/origin/examples/hello-openshift\n\n```", "```\n$ mkdir logs\n$ sudo /data/src/github.com/openshift/origin/_output/local/go/bin/openshift start --public-master=localhost &> logs/openshift.log &\n\n```", "```\n$ export OPENSHIFTCONFIG=`pwd`/openshift.local.certificates/admin/.kubeconfig\n$ export CURL_CA_BUNDLE=`pwd`/openshift.local.certificates/ca/cert.crt\n$ sudo chmod a+rwX \"$OPENSHIFTCONFIG\"\n\n```", "```\n$ osc create -f hello-pod.json\n\n```", "```\n$ curl localhost:6061\n\n```", "```\n$ sudo openshift ex registry --create --credentials=./openshift.local.certificates/openshift-registry/.kubeconfig\n\n```", "```\n$ osc describe service docker-registry\n\n```", "```\n$ openshift ex new-project test --display-name=\"OpenShift 3 Sample\" --description=\"This is an example project to demonstrate OpenShift v3\" --admin=test-admin\n\n```", "```\n$ osc login -u test-admin -p pass\n$ osc project test\n\n```", "```\n$ osc process -f application-template-stibuild.json | osc create -f -\n\n```", "```\n$ osc start-build ruby-sample-build\n\n```", "```\n$ osc get builds\n\n```", "```\n$ osc get services\n\n```", "```\n$ openshift ex policy add-role-to-user view test-admin\n\n```", "```\n$ git clone https://git.openstack.org/stackforge/nova-docker /opt/stack/nova-docker\n$ git clone https://git.openstack.org/openstack-dev/devstack /opt/stack/devstack\n\n```", "```\n$ git clone https://git.openstack.org/openstack/nova /opt/stack/nova\n\n```", "```\n$ cd /opt/stack/nova-docker\n$ ./contrib/devstack/prepare_devstack.sh\n\n```", "```\n$ /opt/stack/devstack/tools/create-stack-user.sh\n\n```", "```\n$ yum install python-pip\n$ pip install docker-py\n\n```", "```\n$ cd /opt/stack/devstack\n$ ./stack.sh\n\n```", "```\nexport VIRT_DRIVER=docker \nexport DEFAULT_IMAGE_NAME=cirros \nexport NON_STANDARD_REQS=1 \nexport IMAGE_URLS=\" \" \n```", "```\n [DEFAULT] \n compute_driver = novadocker.virt.docker.DockerDriver \n```", "```\n[Filters] \n# nova/virt/docker/driver.py: 'ln', '-sf', '/var/run/netns/.*' \nln: CommandFilter, /bin/ln, root \n```", "```\n[DEFAULT] \ncontainer_formats = ami,ari,aki,bare,ovf,docker \n```", "```\n$ docker pull fedora\n\n```", "```\n$ source openrc\n$ export OS_USERNAME=admin\n$ sudo docker save fedora | glance image-create --is-public=True --container-format=docker --disk-format=raw --name fedora\n\n```", "```\n$ pip uninstall  six\n$ pip install --upgrade   six\n\n```"]