["```\n$ minikube start\n```", "```\n$ kubectl create namespace chapter5\n```", "```\n$ helm create guestbook\n```", "```\n$ rm -rf guestbook/templates/tests\n```", "```\n$ helm search hub redis\n```", "```\n$ helm add repo bitnami https://charts.bitnami.com\n```", "```\n$ helm search repo redis --versions\nNAME                        \tCHART VERSION\tAPP VERSION\nbitnami/redis               \t10.5.14       \t5.0.8\nbitnami/redis               \t10.5.13       \t5.0.8\nbitnami/redis               \t10.5.12       \t5.0.8\nbitnami/redis               \t10.5.11       \t5.0.8\n```", "```\ndependencies:\n  - name: redis\n    version: 10.5.x\n    repository: https://charts.bitnami.com\n```", "```\napiVersion: v2\nname: guestbook\ndescription: A Helm chart for Kubernetes\ntype: application\nversion: 0.1.0\nappVersion: 1.16.0\ndependencies:\n  - name: redis\n    version: 10.5.x\n    repository: https://charts.bitnami.com\n```", "```\n$ helm dependency update guestbook\nHang tight while we grab the latest from your chart repositories...\n...Successfully got an update from the 'bitnami' chart repository\nUpdate Complete.  Happy Helming!\nSaving 1 charts\nDownloading redis from repo https://charts.bitnami.com\nDeleting outdated charts\n```", "```\n$ ls guestbook/charts\nredis-10.5.14.tgz\n```", "```\n$ helm show values charts/redis-10.5.14.tgz\n```", "```\n## String to fully override redis.fullname template\n##\n# fullnameOverride:\n```", "```\nname: {{ template 'redis.fullname' . }}-master\n```", "```\n## Use password authentication\nusePassword: true\n```", "```\n## Redis config file\n## ref: https://redis.io/topics/config\n##\nconfigmap: |-\n  # Enable AOF https://redis.io/topics/persistence#append-only-file\n  appendonly yes\n  # Disable RDB persistence, AOF persistence already enabled.\n  save ''\n```", "```\nredis:\n  # Override the redis.fullname template\n  fullnameOverride: redis\n  # Enable unauthenticated access to Redis\n  usePassword: false\n  # Disable AOF persistence\n  configmap: |-\n    appendonly no\n```", "```\nimage: '{{ .Values.image.repository }}:{{ .Chart.AppVersion }}'\n```", "```\nimage:\n  repository: nginx\n```", "```\nappVersion: 1.16.0\n```", "```\nimage: gcr.io/google-samples/gb-frontend:v4\n```", "```\ntype: {{ .Values.service.type }}\n```", "```\nservice:\n  type: ClusterIP\n```", "```\nimage:\n  repository: gcr.io/google-samples/gb-frontend\n  pullPolicy: IfNotPresent\n```", "```\nservice:\n  type: NodePort\n  port: 80\n```", "```\nappVersion: v4\n```", "```\n$ helm install my-guestbook guestbook -n chapter5\n```", "```\nNAME: my-guestbook\nLAST DEPLOYED: Sun Apr 26 09:57:52 2020\nNAMESPACE: chapter5\nSTATUS: deployed\nREVISION: 1\nNOTES:\n1\\. Get the application URL by running these commands:\n  export NODE_PORT=$(kubectl get --namespace chapter5 -o jsonpath='{.spec.ports[0].nodePort}' services my-guestbook)\n  export NODE_IP=$(kubectl get nodes --namespace chapter5 -o jsonpath='{.items[0].status.addresses[0].address}')\n  echo http://$NODE_IP:$NODE_PORT\n```", "```\n$ kubectl get pods -n chapter5\n```", "```\n$ helm get notes my-guestbook -n chapter5\nNOTES:\n1\\. Get the application URL by running these commands:\n  export NODE_PORT=$(kubectl get --namespace chapter5 -o jsonpath='{.spec.ports[0].nodePort}' services my-guestbook)\n  export NODE_IP=$(kubectl get nodes --namespace chapter5 -o jsonpath='{.items[0].status.addresses[0].address}')\n  echo http://$NODE_IP:$NODE_PORT\n```", "```\n$ helm uninstall my-guestbook -n chapter5\n```", "```\n$ kubectl delete pvc -l app=redis -n chapter5\n```", "```\n$ mkdir guestbook/templates/backup\n```", "```\n$ touch guestbook/templates/backup/persistentvolumeclaim.yaml\n$ touch guestbook/templates/backup/job.yaml\n```", "```\n$ mkdir guestbook/templates/restore\n```", "```\n$ touch guestbook/templates/restore/job.yaml\n```", "```\n$ helm install my-guestbook guestbook -n chapter5\n```", "```\n$ helm upgrade my-guestbook guestbook -n chapter5\n```", "```\n$ kubectl get pvc -n chapter5\nNAME                                 STATUS\nredis-data-redis-master-0            Bound\nredis-data-redis-master-0-backup-1   Bound\n```", "```\n$ helm rollback my-guestbook 1 -n chapter5\n```", "```\nservice:\n  type: NodePort\n```", "```\ntype: {{ .Values.service.type }}\n```", "```\n$ helm upgrade my-guestbook . -n chapter5 --set service.type=LoadBalancer\n```", "```\nError: UPGRADE FAILED: template: guestbook/templates/service.yaml:12:6: executing 'guestbook/templates/service.yaml' at <fail 'value 'service.type' must be either 'ClusterIP' or 'NodePort''>: error calling fail: value 'service.type' must be either 'ClusterIP' or 'NodePort'\n```", "```\nimage:\n  repository: gcr.io/google-samples/gb-frontend\n```", "```\nimage: '{{ .Values.image.repository }}:{{ .Chart.AppVersion }}'\n```", "```\n$ helm upgrade my-guestbook . -n chapter5 --set image.repository=''\n```", "```\nError: UPGRADE FAILED: execution error at (guestbook/templates/deployment.yaml:28:21): value 'image.repository' is required\n```", "```\n$ git clone $REPOSITORY_URL\n```", "```\nversion: 1.0.0\n```", "```\n$ helm package guestbook\n```", "```\n$ cp guestbook-1.0.0.tgz $GITHUB_CHART_REPO_CLONE\n```", "```\n$ helm repo index $GITHUB_CHART_REPO_CLONE\n```", "```\n$ git add --all\n$ git commit -m 'feat: adding the guestbook helm chart'\n$ git push origin master\n```", "```\n$ helm repo add learnhelm $GITHUB_PAGES_URL\n```", "```\n$ helm search repo guestbook\n```", "```\n$ kubectl delete namespace chapter5\n```"]