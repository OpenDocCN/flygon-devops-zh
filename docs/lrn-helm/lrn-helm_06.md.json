["```\nname: LearnHelm\n```", "```\nname:LearnHelm\n```", "```\nresources:\n  limits:\n    cpu: 100m\n    memory: 512Mi\n```", "```\nconfiguration: |\n  server.port=8443\n  logging.file.path=/var/log\n```", "```\nreplicas: 1\n```", "```\nreplicas: '1'\n```", "```\ningress:\n  enable: true\n```", "```\nservicePorts:\n  - 8080\n  - 8443\n```", "```\ndeployment:\n  env:\n    - name: MY_VAR\n      value: MY_VALUE\n    - name: SERVICE_NAME\n      value: MY_SERVICE\n```", "```\n{\n  'deployment': {\n    'env': [\n      {\n        'name': 'MY_VAR',\n        'value': 'MY_VALUE'\n      },\n      {\n        'name': 'SERVICE_NAME',\n        'value': 'MY_SERVICE'\n      }\n    ]\n  }\n```", "```\nmy-chart/\n  # chart files and directories\n```", "```\ntemplates/\n  configmap.yaml\n  deployment.yaml\n  service.yaml\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: {{ .Release.Name }}\ndata:\n  configuration.txt: |-\n    {{ .Values.configurationData }}\n```", "```\n## chapterNumber lists the current chapter number\nchapterNumber: 4\n## chapterName gives a description of the current chapter\nchapterName: Understanding Helm Charts\n```", "```\nenv:\n  - name: CHAPTER_NUMBER\n    value: {{ .Values.chapterNumber }}\n  - name: CHAPTER_NAME\n    values: {{ .Values.chapterName }}\n```", "```\nenv:\n  - name: CHAPTER_NUMBER\n    value: 4\n  - name: CHAPTER_NAME\n    values: Understanding Helm Charts\n```", "```\n{\n  '$schema': 'https://json-schema.org/draft-07/schema#',\n  'properties': {\n    'replicas': {\n      'description': 'number of application instances to deploy',\n      'minimum': 0\n      'type' 'integer'\n    },\n    . . .\n  'title': 'values',\n  'type': 'object'\n}\n```", "```\nreadinessProbe:\n{{- if .Values.probeType.httpGet }}\n  httpGet:\n    path: /healthz\n    port: 8080\n    scheme: HTTP\n{{- else }}\n  tcpSocket:\n    port: 8080\n{{- end }}\n  initialDelaySeconds: 30\n  periodSeconds: 10\n```", "```\napplication:\n  resources:\n    limits:\n      cpu: 100m\n      memory: 512Mi\n```", "```\ncpu: {{ .Values.application.resources.limits.cpu }}\nmemory: {{ .Values.application.resources.limits.memory }}\n```", "```\n{{- with .Values.application.resources.limits }}\ncpu: {{ .cpu }}\nmemory: {{ .memory }}\n{{- end }}\n```", "```\nservicePorts:\n  - name: http\n    port: 8080\n  - name: https\n    port: 8443\n  - name: jolokia\n    port: 8778\n```", "```\nspec:\n  ports:\n{{- range .Values.servicePorts }}\n  - name: {{ - name }}\n  port: {{ .port }}\n{{- end }}\n```", "```\n{{- range .Values.servicePorts }}\n  - name: {{ $.Release.Name }}-{{ .name }}\n  port: {{ .port }}\n{{- end }}\n```", "```\n{{ $myvar := 'Hello World!' }}\n```", "```\n{{ $myvar := .Values.greeting }}\n```", "```\ndata:\n  greeting.txt: |\n    {{ $myvar }}\n```", "```\ndata:\n  greetings.txt: |\n{{- range $index, $value := .Values.greetings }}\n    Greeting {{ $index }}: {{ $value }}\n{{- end }}\n```", "```\ndata:\n  greetings.txt: |\n    Greeting 0: Hello\n    Greeting 1: Hola\n    Greeting 2: Hallo\n```", "```\ndata:\n  greetings.txt: |\n{{- range $key, $val := .Values.greetings }}\n    Greeting in {{ $key }}: {{ $val }}\n{{- end }}\n```", "```\ndata:\n  greetings.txt: |\n    Greeting in English: Hello\n    Greeting in Spanish: Hola\n    Greeting in German: Hallo\n```", "```\n{{- with .Values.application.configuration }}\nMy application is called {{ .Release.Name }}\n{{- end }}\n```", "```\n{{ $appName := .Release.Name }}\n{{- with .Values.application.configuration }}\nMy application is called {{ $appName }}\n{{- end }}\n```", "```\nfunctionName arg1 arg2 . . .\n```", "```\ndata:\n  application-config: |-\n{{ indent 4 .Values.config }}\n```", "```\ncat file.txt | grep helm\n```", "```\ndata:\n  application-config: |-\n{{ .Values.config | indent 4 }}\n```", "```\ndata:\n  application-config: |-\n{{ .Values.config | indent 4 | quote }}\n```", "```\nlabels:\n  'app.kubernetes.io/instance': {{ .Release.Name }}\n  'app.kubernetes.io/managed-by': {{ .Release.Service }}\n```", "```\n{{- define 'mychart.labels' }}\nlabels:\n  'app.kubernetes.io/instance': {{ .Release.Name }}\n  'app.kubernetes.io/managed-by': {{ .Release.Service }}\n{{- end }}\n```", "```\ninclude [TEMPLATE_NAME] [SCOPE]\n```", "```\nmetadata:\n  name: {{ .Release.Name }}\n{{- include 'mychart.labels' . | indent 2 }}\n```", "```\nmetadata:\n  name: template-demonstration\n  labels:\n    'app.kubernetes.io/instance': template-demonstration\n    'app.kubernetes.io/managed-by': Helm\n```", "```\ncrds/\n  my-custom-resource-crd.yaml\n```", "```\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  name: my-custom-resources.learnhelm.io\nspec:\n  group: learnhelm.io\n  names:\n    kind: MyCustomResource\n    listKind: MyCustomResourceList\n    plural: MyCustomResources\n    singular: MyCustomResource\n    scope: Namespaced\n    version: v1\n```", "```\ntemplates/\n  my-custom-resource.yaml\n```", "```\nError: validation: chart.metadata is required\n```", "```\n$ helm show chart bitnami/wordpress --version 8.1.0\n```", "```\n$ helm dependency update $CHART_PATH\n```", "```\n$ helm dependency build $CHART_PATH\n```", "```\n$ helm dependency list $CHART_NAME\n```", "```\ndependencies:\n  - name: dependency1\n    repository: https://example.com\n    version: 1.x.x\n    condition: dependency1.enabled\n    tags:\n      - monitoring\n  - name: dependency2\n    repository: https://example.com\n    version: 2.x.x\n    condition: dependency2.enabled\n    tags:\n      - monitoring\n```", "```\ncondition: dependency1.enabled, global.dependency1.enabled\n```", "```\ntags:\n  monitoring: true\n```", "```\nreplicas: 1\nservicePorts:\n  - 8080\n  - 8443\n```", "```\nmy-dep:\n  replicas: 3\n  servicePorts:\n    - 8080\n    - 8443\n    - 8778\n```", "```\nexports:\n  image:\n    registry: 'my-registry.io'\n    name: learnhelm/my-image\n    tag: latest\n```", "```\ndependencies:\n  - name: mariadb\n    repository: https://charts.bitnami.com\n    version: 7.x.x\n    import-values:\n      - image\n```", "```\nregistry: 'my-registry.io'\nname: learnhelm/my-image\ntag: latest\n```", "```\ndependencies:\n  - name: mariadb\n    repository: https://charts.bitnami.com\n    version: 7.x.x\n    import-values:\n      - child: image\n        parent: image\n```", "```\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: helm-auditing\n  annotations:\n    'helm.sh/hook': pre-install,post-install\nspec:\n  template:\n    metadata:\n      name: helm-auditing\n    spec:\n      restartPolicy: Never\n      containers:\n      - name: helm-auditing\n        command: [\"/bin/sh\", \"-c\", \"echo Hook Executed at $(date)\"]\n        image: alpine\n```", "```\nannotations:\n  'helm.sh/hook': pre-install,post-install\n```", "```\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: ttl-job\n  annotations:\n    'helm.sh/hook': post-install\nspec:\n  ttlSecondsAfterFinished: 60\n```", "```\n'helm.sh/resource-policy': keep\n```", "```\n## serviceType can be set to NodePort or LoadBalancer\nserviceType: NodePort\n```", "```\nFollow these instructions to access your application.\n{{- if eq .Values.serviceType 'NodePort' }}\nexport NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath='{.spec.ports[0].nodePort}' services {{.Release.Name }})\nexport NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath='{.items[0].status.addresses[0].address}')\necho \"URL: http://$NODE_IP:$NODE_PORT\"\n{{- else }}\nexport SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Name }} wordpress --template '{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}')\necho \"URL: http://$SERVICE_IP\"\n{{- end }}\n```", "```\n$ helm package [CHART_NAME] [...] [flags]\n```", "```\n$CHART_NAME-$CHART_VERSION.tgz\n```", "```\n# Ignore git directories and files\n.git/\n.gitignore\n```"]