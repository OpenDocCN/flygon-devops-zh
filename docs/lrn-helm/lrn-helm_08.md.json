["```\n$ git clone https://github.com/PacktPublishing/-Learn-Helm Learn-Helm\n```", "```\nminikube start\n```", "```\nkubectl create namespace chapter6\n```", "```\n$ helm template [NAME] [CHART] [flags]\n```", "```\n$ helm template my-guestbook Learn-Helm/helm-charts/charts/guestbook\n```", "```\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n  replicas: {{ .Values.replicas }}\n<skipping>\n          ports:\n            - containerPort: {{ .Values.port }}\n```", "```\nreplicas: 1\nport: 8080\n```", "```\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n  replicas: 1\n<skipping>\n          ports:\n            - containerPort: 8080\n```", "```\n$ helm template my-chart $CHART_DIRECTORY --set replicas=2\n```", "```\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n  replicas: 2\n<skipping>\n          ports:\n            - containerPort: 8080\n```", "```\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n  replicas: {{ .Values.replicas }}\n<skipping>\n      containers:\n        - name: main\n          image: {{ .Values.imageRegistry }}/{{ .Values.imageName }}\n          ports:\n            - containerPort: {{ .Values.port }}\n```", "```\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n  replicas: 1\n<skipping>\n      containers:\n        - name: main\n          image: /\n          ports:\n            - containerPort: 8080\n```", "```\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n  replicas: {{ .Values.replicas }}\n<skipping>\n      containers:\n        - name: main\n          image: {{ required 'value 'imageRegistry' is required' .Values.imageRegistry }}/{{ required 'value 'imageName' is required' .Values.imageName }}\n          ports:\n            - containerPort: {{ .Values.port }}\n```", "```\n$ helm template my-chart $CHART_DIRECTORY\nError: execution error at (test-chart/templates/deployment.yaml:17:20): value 'imageRegistry' is required\n```", "```\nimageRegistry: my-registry.example.com\nimageName: learnhelm/my-image\n```", "```\n$ helm template my-chart $CHART_DIRECTORY --values my-values.yaml\n---\n# Source: test-chart/templates/deployment.yaml\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n  replicas: 1\n<skipping>\n      containers:\n        - name: main\n          image: my-registry.example.com/learnhelm/my-image\n          ports:\n            - containerPort: 8080\n```", "```\nreplicas: 1\nport: 8080\n## REQUIRED\nimageRegistry:\n## REQUIRED\nimageName:\n```", "```\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n{{- range .Values.env }}\n          env:\n            - name: {{ .name }}\n              value: {{ .value }}\n{{- end }}\n{{- if .Values.enableLiveness }}\n          livenessProbe:\n            httpGet:\n              path: /\n              port: {{ .Values.port }}\n            initialDelaySeconds: 5\n            periodSeconds: 10\n{{- end }}\n          ports:\n            containerPort: 8080\n```", "```\n$ helm template my-chart $CHART_DIRECTORY --values my-values.yaml\n---\n# Source: test-chart/templates/deployment.yaml\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n          ports:\n            - containerPort: 8080\n```", "```\nenv:\n  - name: BOOK\n    value: Learn Helm\nenableLiveness: true\n```", "```\n---\n# Source: test-chart/templates/deployment.yaml\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n          env:\n            - name: BOOK\n              value: Learn Helm\n          livenessProbe:\n            httpGet:\n              path: /\n              port: 8080\n            initialDelaySeconds: 5\n            periodSeconds: 10\n          ports:\n            - containerPort: 8080\n```", "```\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n          resources:\n{{ .Values.resources | toYaml | indent 12 }}\n```", "```\nresources:\n  limits:\n    cpu: 200m\n    memory: 256Mi\n```", "```\napiVersion: apps/v1\nkind: Deployment\n<skipping>\n          resources:\n            limits:\n              cpu: 200m\n              memory: 256Mi\n```", "```\n$ helm template my-chart $CHART_DIRECTORY --validate\n```", "```\nError: unable to build kubernetes objects from release manifest: unable to recognize '': no matches for kind 'Deployment' in version 'v1'\n```", "```\n$ helm install my-chart $CHART --dry-run\n```", "```\n$ helm lint PATH [flags]\n```", "```\n$ helm lint $GUESTBOOK_CHART_PATH\n==> Linting guestbook/\n[INFO] Chart.yaml: icon is recommended\n1 chart(s) linted, 0 chart(s) failed\n```", "```\nguestbook/\n  templates/\n  values.yaml\n```", "```\n==> Linting .\nError unable to check Chart.yaml file in chart: stat Chart.yaml: no such file or directory\nError: 1 chart(s) linted, 1 chart(s) failed\n```", "```\nguestbook/\n  Chart.yaml  # Empty\n  templates/\n  values.yaml\n```", "```\n==> Linting .\n[ERROR] Chart.yaml: name is required\n[ERROR] Chart.yaml: apiVersion is required. The value must be either 'v1' or 'v2'\n[ERROR] Chart.yaml: version is required\n[INFO] Chart.yaml: icon is recommended\n[ERROR] templates/: validation: chart.metadata.name is required\nError: 1 chart(s) linted, 1 chart(s) failed\n```", "```\npip install yamllint --user\n```", "```\n$ helm template my-guestbook Learn-Helm/helm-charts/charts/guestbook | yamllint -\n```", "```\n$ cat -n <(helm template my-guestbook Learn-Helm/helm-charts/charts/guestbook)\n```", "```\nrules:\n  indentation:\n    # Allow      myList\n    #            - item1\n    #            - item2\n    # Or\n    #            myList\n    #              - item1\n    #              - item2\n    indent-sequences: whatever\n```", "```\n$ helm template my-guestbook guestbook | yamllint -\n```", "```\n$ mkdir $GUESTBOOK_CHART_DIR/templates/test\n$ touch $GUESTBOOK_CHART_DIR/templates/test/frontend-connection.yaml\n$ touch $GUESTBOOK_CHART_DIR/templates/test/backend-connection.yaml\n```", "```\n$ helm install my-guestbook $GUESTBOOK_CHART_DIR -n chapter6 --wait\n```", "```\nhelm test [RELEASE] [flags]\n```", "```\n$ helm test my-guestbook -n chapter6\n```", "```\nTEST SUITE:     my-guestbook-test-frontend-connection\nLast Started:   Tue Jan 28 18:50:23 2020\nLast Completed: Tue Jan 28 18:50:25 2020\nPhase:          Succeeded\nTEST SUITE:     my-guestbook-test-backend-connection\nLast Started:   Tue Jan 28 18:50:25 2020\nLast Completed: Tue Jan 28 18:50:26 2020\nPhase:          Succeeded\n```", "```\n$ helm test my-guestbook -n chapter6 --logs\n```", "```\nPOD LOGS: my-guestbook-test-frontend-connection\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n<html ng-app='redis'>\n  <head>\n    <title>Guestbook</title>\n```", "```\nPOD LOGS: my-guestbook-test-backend-connection\n```", "```\nexport IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[0].address}')\nexport PORT=$(kubectl get svc my-guestbook -n chapter6 -o jsonpath='{.spec.ports[0].nodePort}')\necho http://$IP:$PORT\n```", "```\n$ helm test my-guestbook -n chapter6 --logs\n```", "```\nPOD LOGS: my-guestbook-test-backend-connection\n,Writing Helm charts is fun!\n```", "```\nhelm-charts/\n  guestbook/\n    Chart.yaml\n    templates/\n    README.md\n    values.yaml\n  redis/           # Contains the same file structure as 'guestbook'\n  wordpress/       # Contains the same file structure as 'guestbook'\n  README.md\n```", "```\nguestbook/\n  Chart.yaml\n  ci/\n    nodeport-service-values.yaml\n    ingress-values.yaml\n  templates/\n  values.yaml\n```", "```\n$ pip install yamale --user\n```", "```\n$ python setup.py install\n```", "```\nLICENSE\nREADME.md\netc/chart_schema.yaml\netc/lintconf.yaml\nct\n```", "```\n$ mkdir $HOME/.ct\n$ mv $HOME/Downloads/etc/* $HOME/.ct/\n$ mv $HOME/Downloads/ct /usr/local/bin/\n```", "```\n$ git clone https://github.com/PacktPublishing/-Learn-Helm Learn-Helm\n```", "```\nchart-dirs:\n  - helm-charts/charts\nchart-repos:\n  - bitnami=https://charts.bitnami.com\n```", "```\n$ cd $LEARN_HELM_LOCATION\n$ ls\nct.yaml  guestbook-operator  helm-charts  jenkins  LICENSE  nginx-cd  README.md\n```", "```\n$ ct lint-and-install\n```", "```\n$ git checkout -b chart-testing-example\n```", "```\ndescription: Used to deploy the Guestbook application\n```", "```\ndescription: Deploys an NGINX instance to Kubernetes\n```", "```\n$ ct lint-and-install\n```", "```\nversion: 1.1.0\n```", "```\n$ ct lint-and-install\n```", "```\nLinting chart with values file 'nginx/ci/clusterip-values.yaml'...\nLinting chart with values file 'nginx/ci/nodeport-values.yaml'...\nInstalling chart with values file 'nginx/ci/clusterip-values.yaml'...\nInstalling chart with values file 'nginx/ci/nodeport-values.yaml'...\n```", "```\n$ ct lint-and-install --upgrade\n```", "```\nTesting upgrades of chart 'guestbook => (version: '1.0.1', path: 'guestbook')' relative to previous revision 'guestbook => (version: '1.0.0', path: 'ct_previous_revision216728160/guestbook')'...\n```", "```\nSkipping upgrade test of 'guestbook => (version: '2.0.0', path: 'helm-charts/charts/guestbook')' because: 1 error occurred:\n\t* 2.0.0 does not have same major version as 1.0.0\n```", "```\n$ kubectl delete ns chapter6\n```"]