["```\nAllocated resources:\n (Total limits may be over 100 percent, i.e., overcommitted.)\n CPU Requests\tCPU Limits    Memory Requests  Memory Limits\n ------------\t----------    ---------------  -------------\n 8520m (40%)\t4500m (24%)   16328Mi (104%)   16328Mi (104%)\n```", "```\nkubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.3.7/components.yaml\n```", "```\nKubectl top pods -n kube-system \n```", "```\nNAMESPACE     NAME                CPU(cores)   MEMORY(bytes)   \ndefault       my-hungry-pod       8m           50Mi            \ndefault       my-lightweight-pod  2m           10Mi       \n```", "```\nkubectl logs <pod_name> <container_name> \n```", "```\nkubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/<VERSION> /aio/deploy/recommended.yaml\n```", "```\nkubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.4/aio/deploy/recommended.yaml\n```", "```\nhttp://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/\n```", "```\nkubectl create serviceaccount dashboard-user\n```", "```\nserviceaccount/dashboard-user created\n```", "```\nkubectl create clusterrolebinding dashboard-user \\--clusterrole=cluster-admin --serviceaccount=default:dashboard-user\n```", "```\nclusterrolebinding.rbac.authorization.k8s.io/dashboard-user created\n```", "```\nkubectl get secrets\n```", "```\nNAME                         TYPE                                  DATA   AGE\ndashboard-user-token-dcn2g   kubernetes.io/service-account-token   3      112s\n```", "```\nkubectl describe secret dashboard-user-token-dcn2g   \n```", "```\nName:         dashboard-user-token-dcn2g\nNamespace:    default\nLabels:       <none>\nAnnotations:  kubernetes.io/service-account.name: dashboard-user\n              kubernetes.io/service-account.uid: 9dd255sd-426c-43f4-88c7-66ss91h44215\nType:  kubernetes.io/service-account-token\nData\n====\nca.crt:     1025 bytes\nnamespace:  7 bytes\ntoken: < LONG TOKEN HERE >\n```", "```\ncurl -LO https://github.com/coreos/kube-prometheus/archive/v0.5.0.zip\n```", "```\nkubectl apply -f manifests/setup\n```", "```\nkubectl apply -f manifests/\n```", "```\nKubectl -n monitoring port-forward svc/prometheus-k8s 3000:9090\n```", "```\nkubelet_http_requests_total\n```", "```\nKubectl -n monitoring port-forward svc/grafana 3000:3000\n```", "```\nKubectl -n monitoring port-forward svc/alertmanager-main 3000:9093\n```", "```\ngit clone https://github.com/kubernetes/kubernetes\n```", "```\ncd kubernetes/cluster/addons\n```", "```\nkubectl apply -f ./fluentd-elasticsearch/es-statefulset.yaml\nkubectl apply -f ./fluentd-elasticsearch/es-service.yaml\n```", "```\nkubectl apply -f ./fluentd-elasticsearch/fluentd-es-configmap.yaml\nkubectl apply -f ./fluentd-elasticsearch/fluentd-es-ds.yaml\n```", "```\nkubectl apply -f ./fluentd-elasticsearch/kibana-deployment.yaml\nkubectl apply -f ./fluentd-elasticsearch/kibana-service.yaml\n```", "```\nkubectl get po -A\n```", "```\nkubectl port-forward -n kube-system svc/kibana-logging 8080:5601\n```", "```\nkubectl create namespace observability\n```", "```\nkubectl create -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/crds/jaegertracing.io_jaegers_crd.yaml\n```", "```\nkubectl create -n observability -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/service_account.yaml\nkubectl create -n observability -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/role.yaml\nkubectl create -n observability -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/role_binding.yaml\nkubectl create -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/cluster_role.yaml\nkubectl create -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/cluster_role_binding.yaml\n```", "```\nkubectl create -n observability -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/operator.yaml\n```", "```\nkubectl get deploy -n observability\n```", "```\napiVersion: jaegertracing.io/v1\nkind: Jaeger\nmetadata:\n  name: all-in-one\n  namespace: observability\nspec:\n  strategy: allInOne\n```", "```\nKubectl apply -f jaeger-allinone.yaml\n```", "```\nKubectl get po -n observability\n```", "```\nNAME                         READY   STATUS    RESTARTS   AGE\nall-in-one-12t6bc95sr-aog4s  1/1     Running   0          5m\n```", "```\nKubectl get ingress -n observability\n```"]