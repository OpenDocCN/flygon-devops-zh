["```\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: mysql\nspec:\n  selector:\n    matchLabels:\n      app: mysql\n  serviceName: mysql\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: mysql\n```", "```\n    spec:\n      initContainers:\n      - name: init-mysql\n        image: mysql:5.7\n        command:\n        - bash\n        - \"-c\"\n        - |\n          set -ex\n          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1\n          ordinal=${BASH_REMATCH[1]}\n          echo [mysqld] > /mnt/conf.d/server-id.cnf\n          echo server-id=$((100 + $ordinal)) >> /mnt/conf.d/server-id.cnf\n          if [[ $ordinal -eq 0 ]]; then\n            cp /mnt/config-map/master.cnf /mnt/conf.d/\n          else\n            cp /mnt/config-map/slave.cnf /mnt/conf.d/\n          fi\n        volumeMounts:\n        - name: conf\n          mountPath: /mnt/conf.d\n        - name: config-map\n          mountPath: /mnt/config-map\n```", "```\n      - name: clone-mysql\n        image: gcr.io/google-samples/xtrabackup:1.0\n        command:\n        - bash\n        - \"-c\"\n        - |\n          set -ex\n          [[ -d /var/lib/mysql/mysql ]] && exit 0\n          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1\n          ordinal=${BASH_REMATCH[1]}\n          [[ $ordinal -eq 0 ]] && exit 0          ncat --recv-only mysql-$(($ordinal-1)).mysql 3307 | xbstream -x -C /var/lib/mysql\n          xtrabackup --prepare --target-dir=/var/lib/mysql\n```", "```\n      containers:\n      - name: mysql\n        image: mysql:5.7\n        env:\n        - name: MYSQL_ALLOW_EMPTY_PASSWORD\n          value: \"1\"\n        ports:\n        - name: mysql\n          containerPort: 3306\n        volumeMounts:\n        - name: data\n          mountPath: /var/lib/mysql\n          subPath: mysql\n        - name: conf\n          mountPath: /etc/mysql/conf.d\n```", "```\n- name: xtrabackup\ncontainerPort: 3307\ncommand:\n- bash\n- \"-c\"\n- |\nset -ex\ncd /var/lib/mysql if [[ -f xtrabackup_slave_info && \"x$(<xtrabackup_slave_info)\" != \"x\" ]]; thencat xtrabackup_slave_info | sed -E 's/;$//g' > change_master_to.sql.inrm -f xtrabackup_slave_info xtrabackup_binlog_info\nelif [[ -f xtrabackup_binlog_info ]]; then[[ `cat xtrabackup_binlog_info` =~ ^(.*?)[[:space:]]+(.*?)$ ]] || exit 1\nrm -f xtrabackup_binlog_info xtrabackup_slave_info\necho \"CHANGE MASTER TO MASTER_LOG_FILE='${BASH_REMATCH[1]}',\\\nMASTER_LOG_POS=${BASH_REMATCH[2]}\" > change_master_to.sql.in\nfi if [[ -f change_master_to.sql.in ]]; then\necho \"Waiting for mysqld to be ready (accepting connections)\"\nuntil mysql -h 127.0.0.1 -e \"SELECT 1\"; do sleep 1; done\necho \"Initializing replication from clone position\"\nmysql -h 127.0.0.1 \\\n-e \"$(<change_master_to.sql.in), \\\nMASTER_HOST='mysql-0.mysql', \\\nMASTER_USER='root', \\\nMASTER_PASSWORD='', \\\nMASTER_CONNECT_RETRY=10; \\\nSTART SLAVE;\" || exit 1\nmv change_master_to.sql.in change_master_to.sql.orig\nfi exec ncat --listen --keep-open --send-only --max-conns=1 3307 -c \\\n\"xtrabackup --backup --slave-info --stream=xbstream --host=127.0.0.1 --user=root\"\n```", "```\n  volumeClaimTemplates:\n  - metadata:\n      name: data\n    spec:\n      accessModes: [\"ReadWriteOnce\"]\n      resources:\n        requests:\n          storage: 10Gi\n```", "```\n(\n  set -x; cd \"$(mktemp -d)\" &&\n  curl -fsSLO \"https://github.com/kubernetes-sigs/krew/releases/latest/download/krew.tar.gz\" &&\n  tar zxvf krew.tar.gz &&\n  KREW=./krew-\"$(uname | tr '[:upper:]' '[:lower:]')_$(uname -m | sed -e 's/x86_64/amd64/' -e 's/arm.*$/arm/')\" &&\n  \"$KREW\" install krew\n)\n```", "```\nexport PATH=\"${KREW_ROOT:-$HOME/.krechw}/bin:$PATH\"\n```", "```\nkubectl krew install minio\n```", "```\nkubectl minio init\n```", "```\nCustomResourceDefinition tenants.minio.min.io: created\nClusterRole minio-operator-role: created\nServiceAccount minio-operator: created\nClusterRoleBinding minio-operator-binding: created\nMinIO Operator Deployment minio-operator: created\n```", "```\nkubectl get pods\n```", "```\nNAMESPACE     NAME                               READY   STATUS    RESTARTS   AGE\ndefault       minio-operator-85ccdcfb6-r8g8b     1/1     Running   0          5m37s\n```", "```\nDIRECT_CSI_DRIVES=data{1...4}\nDIRECT_CSI_DRIVES_DIR=/mnt\nKUBELET_DIR_PATH=/var/lib/kubelet\n```", "```\nexport $(cat default.env)\n```", "```\nkubectl apply -k github.com/minio/direct-csi\n```", "```\nkubenamespace/direct-csi created\nstorageclass.storage.k8s.io/direct.csi.min.io created\nserviceaccount/direct-csi-min-io created\nclusterrole.rbac.authorization.k8s.io/direct-csi-min-io created\nclusterrolebinding.rbac.authorization.k8s.io/direct-csi-min-io created\nconfigmap/direct-csi-config created\nsecret/direct-csi-min-io created\nservice/direct-csi-min-io created\ndeployment.apps/direct-csi-controller-min-io created\ndaemonset.apps/direct-csi-min-io created\ncsidriver.storage.k8s.io/direct.csi.min.io created\n```", "```\nkubectl get pods –n direct-csi\n```", "```\nNAME                                          READY   STATUS    RESTARTS   AGE\ndirect-csi-controller-min-io-cd598c4b-hn9ww   2/2     Running   0          9m\ndirect-csi-controller-min-io-cd598c4b-knvbn   2/2     Running   0          9m\ndirect-csi-controller-min-io-cd598c4b-tth6q   2/2     Running   0          9m\ndirect-csi-min-io-4qlt7                       3/3     Running   0          9m\ndirect-csi-min-io-kt7bw                       3/3     Running   0          9m\ndirect-csi-min-io-vzdkv                       3/3     Running   0          9m\n```", "```\nkubectl minio tenant create --name my-tenant --servers 2 --volumes 4 --capacity 1Gi -o > my-minio-tenant.yaml\n```", "```\nkubectl minio tenant create --name my-tenant --servers 2 --volumes 4 --capacity 1Gi\n```", "```\napiVersion: minio.min.io/v1\nkind: Tenant\nmetadata:\n  creationTimestamp: null\n  name: my-tenant\n  namespace: default\nscheduler:\n  name: \"\"\nspec:\n  certConfig:\n    commonName: \"\"\n    organizationName: []\n    dnsNames: []\n  console:\n    consoleSecret:\n      name: my-tenant-console-secret\n    image: minio/console:v0.3.14\n    metadata:\n      creationTimestamp: null\n      name: my-tenant\n    replicas: 2\n    resources: {}\n  credsSecret:\n    name: my-tenant-creds-secret\n  image: minio/minio:RELEASE.2020-09-26T03-44-56Z\n  imagePullSecret: {}\n```", "```\n liveness:\n    initialDelaySeconds: 10\n    periodSeconds: 1\n    timeoutSeconds: 1\n  mountPath: /export\n  requestAutoCert: true\n  zones:\n  - resources: {}\n    servers: 2\n    volumeClaimTemplate:\n      apiVersion: v1\n      kind: persistentvolumeclaims\n      metadata:\n        creationTimestamp: null\n      spec:\n        accessModes:\n        - ReadWriteOnce\n        resources:\n          requests:\n            storage: 256Mi\n      status: {}\n    volumesPerServer: 2\nstatus:\n  availableReplicas: 0\n  currentState: \"\"\n```", "```\nzones:\n  - resources: {}\n    servers: 2\n    volumeClaimTemplate:\n      metadata:\n        name: data\n      spec:\n        accessModes:\n          - ReadWriteOnce\n        resources:\n          requests:\n            storage: 256Mi\n        storageClassName: direct.csi.min.io\n```", "```\nkubectl apply -f my-updated-minio-tenant.yaml\n```", "```\ntenant.minio.min.io/my-tenant created\nsecret/my-tenant-creds-secret created\nsecret/my-tenant-console-secret created\n```", "```\necho $(kubectl get secret my-tenant-console-secret -o=jsonpath='{.data.CONSOLE_ACCESS_KEY}' | base64 --decode)\n```", "```\necho $(kubectl get secret my-tenant-console-secret -o=jsonpath='{.data.CONSOLE_SECRET_KEY}' | base64 --decode)\n```", "```\nkubectl port-forward service/my-tenant-console 8081:9443\n```", "```\necho $(kubectl get secret my-tenant-creds-secret -o=jsonpath='{.data.accesskey}' | base64 --decode)\n```", "```\necho $(kubectl get secret my-tenant-creds-secret -o=jsonpath='{.data.secretkey}' | base64 --decode)\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: minio-mc\nspec:\n  containers:\n  - name: mc\n    image: minio/mc\n    command: [\"/bin/sh\", \"-c\", \"sleep 10000000s\"]\n  restartPolicy: OnFailure\n```", "```\nkubectl apply -f minio-mc-pod.yaml\n```", "```\nKubectl exec -it minio-mc -- sh\n```", "```\nmc config host add my-minio https://<MINIO TENANT POD IP>:9000 --insecure\n```", "```\nAdded `my-minio` successfully.\n```", "```\nmc mb my-minio/my-bucket-2 --insecure\n```", "```\nBucket created successfully `my-minio/my-bucket-2`.\n```", "```\nmc mv test.txt my-minio/my-bucket-2 --insecure\n```", "```\nhelm repo add cockroachdb https://charts.cockroachdb.com/\n```", "```\n\"cockroachdb\" has been added to your repositories\n```", "```\nstorage:\n  persistentVolume:\n    size: 2Gi\nstatefulset:\n  resources:\n    limits:\n      memory: \"1Gi\"\n    requests:\n      memory: \"1Gi\"\nconf:\n  cache: \"256Mi\"\n  max-sql-memory: \"256Mi\"\n```", "```\nhelm install cdb --values cockroach-db-values.yaml cockroachdb/cockroachdb\n```", "```\nkubectl get po \n```", "```\nNAMESPACE     NAME                                          READY   STATUS      RESTARTS   AGE\ndefault       cdb-cockroachdb-0                             0/1     Running     0          57s\ndefault       cdb-cockroachdb-1                             0/1     Running     0          56s\ndefault       cdb-cockroachdb-2                             1/1     Running     0          56s\ndefault       cdb-cockroachdb-init-8p2s2                    0/1     Completed   0          57s\n```", "```\nkubectl run -it --rm cockroach-client \\\n        --image=cockroachdb/cockroach \\\n        --restart=Never \\\n        --command -- \\\n        ./cockroach sql --insecure --host=cdb-cockroachdb-public.default\n```", "```\nroot@cdb-cockroachdb-public.default:26257/defaultdb>\n```", "```\nCREATE DATABASE mydb;\n```", "```\nCREATE TABLE mydb.users (\n    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n    first_name STRING,\n    last_name STRING,\n    email STRING\n );\n```", "```\nINSERT INTO mydb.users (first_name, last_name, email)\n  VALUES\n      ('John', 'Smith', 'jsmith@fake.com');\n```", "```\nSELECT * FROM mydb.users;\n```", "```\n                  id                  | first_name | last_name |      email\n---------------------------------------+------------+-----------+------------------\n  e6fa342f-8fe5-47ad-adde-e543833ffd28 | John       | Smith     | jsmith@fake.com\n(1 row)\n```", "```\nhelm repo add bitnami https://charts.bitnami.com/bitnami\n```", "```\nauth:\n  user: user\n  password: test123\npersistence:\n  enabled: false\n```", "```\nhelm install rabbitmq bitnami/rabbitmq --values values-rabbitmq.yaml\n```", "```\nkubectl port-forward --namespace default svc/rabbitmq 15672:15672\n```"]