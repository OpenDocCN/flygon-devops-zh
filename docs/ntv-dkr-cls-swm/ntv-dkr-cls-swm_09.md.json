["```\n$ docker swarm init --external-ca \\  \n    protocol=cfssl,url=https://ca.example.com\n\n```", "```\n$ docker swarm update --cert-expiry 1h\n\n```", "```\n$ docker swarm join-token --rotate worker\n$ docker swarm join-token --rotate manager\n\n```", "```\n$ docker-machine create \\\n      --driver generic \\\n      --generic-ip-address=<IP> \\\n    mg0\n\n```", "```\ngit clone https://github.com/docker/notary.git\ncd notary\ngit checkout v0.4.2\ncd notary\n\n```", "```\n$ docker-compose up -d\n\n```", "```\n$ mkdir -p ~/.docker/tls/127.0.0.1:4443/\n$ cp ./fixtures/notary-server.crt \n    ~/.docker/tls/127.0.0.1:4443/ca.crt\n\n```", "```\n$ export DOCKER_CONTENT_TRUST=1\n$ export DOCKER_CONTENT_TRUST_SERVER=https://127.0.0.1:4443\n\n```", "```\n$ docker tag busybox chanwit/busybox:signed\n$ docker push chanwit/busybox:signed\n\n```", "```\nThe push refers to a repository [docker.io/chanwit/busybox]\ne88b3f82283b: Layer already exists\nsigned: digest: \nsha256:29f5d56d12684887bdfa50dcd29fc31eea4aaf4ad3bec43daf19026a7ce69912 size: 527\nSigning and pushing trust metadata\nYou are about to create a new root signing key passphrase. This passphrase\nwill be used to protect the most sensitive key in your signing system. Please\nchoose a long, complex passphrase and be careful to keep the password and the\nkey file itself secure and backed up. It is highly recommended that you use a\npassword manager to generate the passphrase and keep it safe. There will be no\nway to recover this key. You can find the key in your config directory.\nEnter passphrase for new root key with ID 1bec0c1:\nRepeat passphrase for new root key with ID 1bec0c1:\nEnter passphrase for new repository key with ID ee73739 (docker.io/chanwit/busybox):\nRepeat passphrase for new repository key with ID ee73739 (docker.io/chanwit/busybox):\nFinished initializing \"docker.io/chanwit/busybox\"\nSuccessfully signed \"docker.io/chanwit/busybox\":signed\n\n```", "```\n$ docker pull chanwit/busybox:signed\nPull (1 of 1): chanwit/busybox:signed@sha256:29f5d56d12684887bdfa50dcd29fc31eea4aaf4ad3bec43daf19026a7ce69912\nsha256:29f5d56d12684887bdfa50dcd29fc31eea4aaf4ad3bec43daf19026a7ce69912: Pulling from chanwit/busybox\nDigest: sha256:29f5d56d12684887bdfa50dcd29fc31eea4aaf4ad3bec43daf19026a7ce69912\nStatus: Image is up to date for chanwit/busybox@sha256:29f5d56d12684887bdfa50dcd29fc31eea4aaf4ad3bec43daf19026a7ce69912\nTagging chanwit/busybox@sha256:29f5d56d12684887bdfa50dcd29fc31eea4aaf4ad3bec43daf19026a7ce69912 as chanwit/busybox:signed\n\n```", "```\n$ docker pull busybox:latest\nError: remote trust data does not exist for docker.io/library/busybox: 127.0.0.1:4443 does not have trust data for docker.io/library/busybox\n\n```", "```\n$ docker swarm init\n\n```", "```\n$ docker secret create password\n1234\n\n```", "```\n$ docker secret ls\nID                      NAME                CREATED             UPDATED\n16blafexuvrv2hgznrjitj93s  password  25 seconds ago      25 seconds ago\nuxep4enknneoevvqatstouec2  test-pass 18 minutes ago      18 minutes ago\n\n```", "```\n$ wget https://raw.githubusercontent.com/docker-\nlibrary/mariadb/2538af1bad7f05ac2c23dc6eb35e8cba6356fc43/10.1/docker-entrypoint.sh\n\n```", "```\n# check secret file. if exist, override\nif [ -f \"/run/secrets/mysql-root-password\" ]; then\nMYSQL_ROOT_PASSWORD=$(cat /run/secrets/mysql-root-password)\nfi\n\n```", "```\nFROM mariadb:10.1.19\nRUN  unlink /docker-entrypoint.sh\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN  chmod +x /usr/local/bin/docker-entrypoint.sh\nRUN  ln -s usr/local/bin/docker-entrypoint.sh /\n\n```", "```\n$ docker build -t chanwit/mariadb:10.1.19 .\n\n```", "```\n$ docker network create -d overlay dbnet\nlsc7prijmvg7sj6412b1jnsot\n$ docker service create --name mysql \\\n--secret source=password,target=mysql-root-password \\\n--network dbnet \\\nchanwit/mariadb:10.1.19\n\n```", "```\n$ docker service create --name myadmin \\\n--network dbnet --publish 8080:80 \\\n-e PMA_HOST=mysql \\\nphpmyadmin/phpmyadmin\n\n```"]