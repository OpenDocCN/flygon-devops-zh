["```\ndocker-machine create -d DRIVER --engine-install-url \n    https://test.docker.com mymachine\n\n```", "```\n#!/bin/bash\nfor i in `seq 0 9`; do\ndocker-machine create -d amazonec2 --engine-install-url \n    https://test.docker.com --amazonec2-instance-type \"t2.large\" swarm-\n    worker-$i\ndone\n\n```", "```\n#!/bin/bash\nSWARMWORKER=\"swarm-worker-\"\nfor machine in `docker-machine ls --format {{.Name}} | grep \n    $SWARMWORKER`;\ndo\ndocker-machine ssh $machine sudo docker swarm join --token SWMTKN-\n    1-5c3mlb7rqytm0nk795th0z0eocmcmt7i743ybsffad5e04yvxt-\n    9m54q8xx8m1wa1g68im8srcme \\\n172.31.10.250:2377\ndone\n\n```", "```\n# Set $GOPATH here\ngo get https://github.com/chanwit/belt\n\n```", "```\ndigitalocean:\nimage: \"docker-1.12-rc4\"\nregion: nyc3\nssh_key_fingerprint: \"your SSH ID\"\nssh_user: root\n\n```", "```\n$ belt create 16gb mg[0:2]\nNAME      IPv4         MEMORY  REGION         IMAGE           STATUS\nmg2   104.236.231.136  16384   nyc3    Ubuntu docker-1.12-rc4  active\nmg1   45.55.136.207    16384   nyc3    Ubuntu docker-1.12-rc4  active\nmg0   45.55.145.205    16384   nyc3    Ubuntu docker-1.12-rc4  active\n\n```", "```\n$ belt status --wait active=3\nSTATUS  #NODES  NAMES\nactive      3   mg2, mg1, mg0\n\n```", "```\n$ belt create 512mb node[1:10]\n$ belt status --wait active=13\n\n```", "```\nSTATUS  #NODES  NAMES\nactive      3   node10, node9, node8, node7\n\n```", "```\ngit clone https://github.com/fsoppelsa/ansible-swarm\ncd ansible-swarm/library\ngo build docker-machine.go\ngo build docker_swarm.go\ncd ..\n\n```", "```\n    ---    \nname: Join the Swarm2k project\nhosts: localhost\nconnection: local\ngather_facts: False\n#mg0 104.236.18.183\n#mg1 104.236.78.154\n#mg2 104.236.87.10\ntasks:\nname: Load shell variables\nshell: >\neval $(docker-machine env \"{{ machine_name }}\")\necho $DOCKER_TLS_VERIFY &&\necho $DOCKER_HOST &&\necho $DOCKER_CERT_PATH &&\necho $DOCKER_MACHINE_NAME\nregister: worker\nname: Set facts\nset_fact:\nwhost: \"{{ worker.stdout_lines[0] }}\"\nwcert: \"{{ worker.stdout_lines[1] }}\"\nname: Join a worker to Swarm2k\ndocker_swarm:\nrole: \"worker\"\noperation: \"join\"\njoin_url: [\"tcp://104.236.78.154:2377\"]\nsecret: \"d0cker_swarm_2k\"\ndocker_url: \"{{ whost }}\"\ntls_path: \"{{ wcert }}\"\nregister: swarm_result\nname: Print final msg\ndebug: msg=\"{{ swarm_result.msg }}\"\n\n```", "```\n#!/bin/bash\nSWARMWORKER=\"swarm-worker-\"\nfor machine in `docker-machine ls --format {{.Name}} | grep \n    $SWARMWORKER`;\ndo\nansible-playbook -M library --extra-vars \"{machine_name: $machine}\" \n    playbook.yaml\ndone\n\n```", "```\ndocker node promote worker0\ndocker node promote worker1\n\n```", "```\ndocker node update --label-add type=ssd --label-add type=mysql \n    worker1\ndocker node update --label-add type=ssd --label-add type=mysql \n    worker2\ndocker node update --label-add type=ssd --label-add type=mysql \n    worker3\n\n```", "```\ndocker service create --replicas 3 --constraint 'node.type == \n    mysql' --name mysql-service mysql:5.5.\n\n```", "```\ndocker node rm worker9\n\n```", "```\ndocker node update --availability drain worker9\n\n```", "```\ndocker node demote manager3\ndocker node update --availability drain manager3\n# Node shutdown\ndocker node rm manager3\n\n```", "```\ndocker node ls\n\n```", "```\ndocker node ls --filter name=manager # prints nodes named *manager*\ndocker node ls --filter \"type=mysql\" # prints nodes with a label \n    type tagged \"mysql\"\n\n```", "```\ndocker inspect worker1\n\n```", "```\ndocker node inspect --format '{{ .Description.Resources }}' worker2\n{1000000000 1044140032}\n\n```", "```\ncurl -sSL https://shipyard-project.com/deploy | bash -s\n\n```", "```\ncurl -L \n    https://github.com/docker/compose/releases/download/1.8.0/docker-\n    compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose && \n    chmod +x /usr/local/bin/docker-compose\n\n```", "```\ndocker-compose up -d < docker-compose.yml\n\n```", "```\ndocker run -d -p 9000:9000 -v /var/run/:/var/run \n    portainer/portainer\n\n```"]