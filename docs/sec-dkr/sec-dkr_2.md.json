["```\n$ export DOCKER_CONTENT_TRUST=1\n\n```", "```\n$ docker push scottpgallagher/ubuntu:latest\n\nThe push refers to a repository [docker.io/scottpgallagher/ubuntu] (len: 1)\nf50e4a66df18: Image already exists\na6785352b25c: Image already exists\n0998bf8fb9e9: Image already exists\n0a85502c06c9: Image already exists\nlatest: digest: sha256:98002698c8d868b03708880ad2e1d36034c79a6698044b495ac34c4c16eacd57 size: 8008\nSigning and pushing trust metadata\nYou are about to create a new root signing key passphrase. This passphrase\nwill be used to protect the most sensitive key in your signing system. Please\nchoose a long, complex passphrase and be careful to keep the password and the\nkey file itself secure and backed up. It is highly recommended that you use a\npassword manager to generate the passphrase and keep it safe. There will be no\nway to recover this key. You can find the key in your config directory.\nEnter passphrase for new root key with id d792b7a:\nRepeat passphrase for new root key with id d792b7a:\nEnter passphrase for new repository key with id docker.io/scottpgallagher/ubuntu (46a967e):\nRepeat passphrase for new repository key with id docker.io/scottpgallagher/ubuntu (46a967e):\nFinished initializing \"docker.io/scottpgallagher/ubuntu\"\n\n```", "```\nlatest: digest: sha256:98002698c8d868b03708880ad2e1d36034c79a6698044b495ac34c4c16eacd57 size: 8008\n\n```", "```\n$ docker pull scottpgallagher/ubuntu\n\nUsing default tag: latest\nlatest: Pulling from scottpgallagher/ubuntu\nDigest: sha256:98002698c8d868b03708880ad2e1d36034c79a6698044b495ac34c4c16eacd57\nStatus: Downloaded newer image for scottpgallagher/ubuntu:latest\n\n```", "```\n$ sudo bash -c '$(sudo docker run docker/trusted-registry install)'\n\n```", "```\n$ docker pull mysql\n\nUsing default tag: latest\nlatest: Pulling from library/mysql\n\n1565e86129b8: Pull complete\na604b236bcde: Pull complete\n2a1fefc8d587: Pull complete\nf9519f46a2bf: Pull complete\nb03fa53728a0: Pull complete\nac2f3cdeb1c6: Pull complete\nb61ef27b0115: Pull complete\n9ff29f750be3: Pull complete\nece4ebeae179: Pull complete\n95255626f143: Pull complete\n0c7947afc43f: Pull complete\nb3a598670425: Pull complete\ne287fa347325: Pull complete\n40f595e5339f: Pull complete\n0ab12a4dd3c8: Pull complete\n89fa423a616b: Pull complete\nDigest: sha256:72e383e001789562e943bee14728e3a93f2c3823182d14e3e01b3fd877976265\nStatus: Downloaded newer image for mysql:latest\n\n$ docker images\n\nREPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE\nmysql               latest              89fa423a616b        20 hours ago        359.9 MB\n\n```", "```\n$ docker commit be4ea9a7734e <dns.name>/mysql\n\n```", "```\n$ docker push <dns.name>/mysql\n\n```", "```\n$ docker pull <dns.name>/mysql\n\n```", "```\n$ docker run -d -p 5000:5000 --restart=always  --name registry registry:2.2\n\n```", "```\n$ docker pull mysql\nUsing default tag: latest\nlatest: Pulling from library/mysql\n\n1565e86129b8: Pull complete\na604b236bcde: Pull complete\n2a1fefc8d587: Pull complete\nf9519f46a2bf: Pull complete\nb03fa53728a0: Pull complete\nac2f3cdeb1c6: Pull complete\nb61ef27b0115: Pull complete\n9ff29f750be3: Pull complete\nece4ebeae179: Pull complete\n95255626f143: Pull complete\n0c7947afc43f: Pull complete\nb3a598670425: Pull complete\ne287fa347325: Pull complete\n40f595e5339f: Pull complete\n0ab12a4dd3c8: Pull complete\n89fa423a616b: Pull complete\nDigest: sha256:72e383e001789562e943bee14728e3a93f2c3823182d14e3e01b3fd877976265\nStatus: Downloaded newer image for mysql:latest\n\n```", "```\n$ docker tag mysql <IP_address>:5000/mysql\n\n```", "```\n$ docker push <IP_address>:5000/mysql\n\n```", "```\n$ docker pull <IP_address>:5000/mysql\n\n```", "```\n$ docker run -d -p 5000:5000 --restart=always --name registry \\\n-e REGISTRY_HTTP_TLS_CERTIFICATE=server.crt \\\n-e REGISTRY_HTTP_TLS_KEY=server.key \\\n-v <certificate folder>/<path_on_container> \\\nregistry:2.2.0\n\n```", "```\n-e REGISTRY_HTTP_TLS_CERTIFICATE=server.crt \\\n-e REGISTRY_HTTP_TLS_KEY=server.key \\\n\n```", "```\n$ docker run --entrypoint htpasswd registry:2.2.0 -bn <username> <password> > htpasswd\n\n```", "```\n$ docker run -d -p 5000:5000 --restart=always --name registry \\\n-e \"REGISTRY_AUTH=htpasswd\" \\\n-e \"REGISTRY_AUTH_HTPASSWD_REALM=Registry Name\" \\\n-e REGISTRY_AUTH_HTPASSWD_PATH=htpasswd \\\n-e REGISTRY_HTTP_TLS_CERTIFICATE=server.crt \\\n-e REGISTRY_HTTP_TLS_KEY=server.key \\\nregistry:2.20\n\n```", "```\n-e REGISTRY_HTTP_TLS_CERTIFICATE=server.crt \\\n-e REGISTRY_HTTP_TLS_KEY=server.key \\\n\n```", "```\n-e \"REGISTRY_AUTH=htpasswd\" \\\n-e \"REGISTRY_AUTH_HTPASSWD_REALM=Registry Name\" \\\n-e REGISTRY_AUTH_HTPASSWD_PATH=htpasswd \\\n\n```"]