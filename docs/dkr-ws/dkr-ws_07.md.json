["```\n$docker container run --name testevents ubuntu:14.04 ping google.com\n```", "```\nPING google.com (172.217.165.142) 56(84) bytes of data.\n64 bytes from lax30s03-in-f14.1e100.net (172.217.165.142):\nicmp_seq=1 ttl=115 time=68.9 ms\n64 bytes from lax30s03-in-f14.1e100.net (172.217.165.142):\nicmp_seq=2 ttl=115 time=349 ms\n64 bytes from lax30s03-in-f14.1e100.net (172.217.165.142):\nicmp_seq=3 ttl=115 time=170 ms\n```", "```\n$docker container ls\n```", "```\nCONTAINER ID    IMAGE           COMMAND            CREATED\n   STATUS           PORTS          NAMES\n10e235033813     ubuntu:14.04   \"ping google.com\"  10 seconds ago\n   Up 5 seconds                    testevents\n```", "```\n$docker container pause testevents\n```", "```\n$docker container ls\n```", "```\nCONTAINER ID    IMAGE         COMMAND            CREATED\n   STATUS            PORTS          NAMES\n10e235033813    ubuntu:14.04  \"ping google.com\"  26 seconds ago\n   Up 20 seconds (Paused)           testevents\n```", "```\n$docker container unpause testevents\n```", "```\n$docker container ls\n```", "```\nCONTAINER ID    IMAGE         COMMAND            CREATED\n   STATUS            PORTS          NAMES\n10e235033813    ubuntu:14.04  \"ping google.com\"  43 seconds ago\n   Up 37 seconds                    testevents\n```", "```\n$docker container stop testevents\n```", "```\n64 bytes from lax30s03-in-f14.1e100.net (142.250.64.110):\nicmp_seq = 42 ttl=115 time=19.8 ms\n64 bytes from lax30s03-in-f14.1e100.net (142.250.64.110):\nicmp_seq = 43 ttl=115 time=18.7 ms\n```", "```\n$docker container ls\n```", "```\nCONTAINER ID      IMAGE      COMMAND     CREATED\n        STATUS         PORTS                   NAMES\n```", "```\n$docker container ls -a\n```", "```\nCONTAINER ID    IMAGE         COMMAND            CREATED\n   STATUS            PORTS          NAMES\n10e235033813    ubuntu:14.04  \"ping google.com\"  1 minute ago\n   Exited (137) 13 seconds ago      testevents\n```", "```\n$docker container start -a testevents\n```", "```\n64 bytes from lax30s03-in-f14.1e100.net (142.250.64.110):\nicmp_seq = 55 ttl=115 time=63.5 ms\n64 bytes from lax30s03-in-f14.1e100.net (142.250.64.110):\nicmp_seq = 56 ttl=115 time=22.2 ms\n```", "```\n$docker container ls\n```", "```\nCONTAINER ID    IMAGE         COMMAND            CREATED\n   STATUS            PORTS          NAMES\n10e235033813    ubuntu:14.04  \"ping google.com\"  43 seconds ago\n   Up 37 seconds                    testevents\n```", "```\n$docker container rm -f testevents\n```", "```\ntestevents\n```", "```\n$docker container ls -a\n```", "```\n$docker container run --name testcreate ubuntu:14.04 time\n```", "```\n$docker container ls\n```", "```\nCONTAINER ID    IMAGE         COMMAND            CREATED\n   STATUS            PORTS          NAMES\n```", "```\n$docker container ls -a\n```", "```\nCONTAINER ID    IMAGE         COMMAND         CREATED\n   STATUS            PORTS          NAMES\nC262e6718724    ubuntu:14.04  \"time\"          30 seconds ago\n   Created                          testcreate\n```", "```\n$docker container run -it --name testsize ubuntu:14.04\n```", "```\n$docker image ls\n```", "```\nREPOSITORY     TAG      IMAGE ID         CREATED\n  SIZE\nubuntu         14.04    971bb3841501     23 months ago\n  188MB\n```", "```\n$docker container ls -s\n```", "```\nCONTAINER ID    IMAGE          COMMAND      CREATED\n  STATUS     PORTS    NAMES      SIZE\n9f2d2d1ee3e0    ubuntu:14.04   \"/bin/bash\"  6 seconds ago\n  Up 6 minutes        testsize   0B (virtual 188MB)\n```", "```\nroot@9f2d2d1ee3e0: apt-get update\n```", "```\nroot@9f2d2d1ee3e: apt-get install -y wget\n```", "```\n$docker container ls -s\n```", "```\nCONTAINER ID    IMAGE          COMMAND      CREATED\n  STATUS     PORTS    NAMES      SIZE\n9f2d2d1ee3e0    ubuntu:14.04   \"/bin/bash\"  9 seconds ago\n  Up 9 minutes        testsize   27.8MB (virtual 216MB)\n```", "```\n$docker swarm init --advertise-addr <IP>\n```", "```\n$ docker service create -p 80 --replicas 2 nginx:1.14.2\n```", "```\n$docker service ls\n```", "```\nID            NAME             MODE        REPLICAS  IMAGE\n     PORTS\nxmnp23wc0m6c  amazing_hellman  replicated  2/2       nginx:1.14.2\n     *:30000->80/tcp\n```", "```\n$curl 192.168.0.223:3000\n```", "```\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n<style>\n    body {\n        width: 35em;\n        margin: 0 auto;\n        font-family: Tahoma, Verdana, Arial, sans-serif;\n    }\n</style>\n</head>\n</body>\n<h1>Welcome to nginx!<h1>\n<p>If you see this page, the nginx web server is successfully \ninstalled and working. Further configuration is required. </p>\n<p>For online documentation and support please refer to\n<a href=\"http://nginx.org/\">nginx.org</a>.<br/>\nCommercial support is available at\n<a href=\"http://nginx.com/\">nginx.com</a>.</p>\n<p><em>Thank you for using nginx.</em></p>\n</body>\n<html>\n```", "```\n$docker service scale amazing_hellman=5\n```", "```\namazing_hellman scaled to 5\noverall progress: 5 out of 5 tasks\n1/5: running\n2/5: running\n3/5: running\n4/5: running\n5/5: running\nverify: Service converged\n```", "```\n$docker service ls\n```", "```\nID            NAME             MODE        REPLICAS  IMAGE\n     PORTS\nxmnp23wc0m6c  amazing_hellman  replicated  5/5       nginx:1.14.2\n     *:30000->80/tcp\n```", "```\n$docker service rm amazing_hellman\n```", "```\namazing_hellman\n```", "```\n$docker service ls\n```", "```\nID       NAME      MODE      REPLICAS      IMAGE      PORTS\n```", "```\n$vi stack.yml\n```", "```\n# Use root/example as user/password credentials\nversion: '3.1'\nservices:\n  db:\n    image: mysql\n    command: --default-authentication-plugin=      mysql_native_password\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: example\n  adminer:\n    image: adminer\n    restart: always\n    ports:\n      - 8080:8080\n```", "```\n:wq\n```", "```\n$cat stack.yml\n```", "```\n$docker stack deploy -c stack.yml mysql\n```", "```\nIgnoring unsupported options: restart\nCreating network mysql_default\nCreating service mysql_db\nCreating service mysql_adminer\n```", "```\n$docker stack ls\n```", "```\nNAME     SERVICES    ORCHESTRATOR\nmysql    2           Swarm\n```", "```\n$docker stack rm mysql\n```", "```\nRemoving service mysql_adminer\nRemoving service mysql_db\nRemoving network mysql_default\n```", "```\n$docker volume create vol1\n```", "```\nvol1\n```", "```\n$docker volume ls\n```", "```\nDRIVER            VOLUME NAME\nLocal             vol1\n```", "```\n$docker volume inspect vol1\n```", "```\n[\n    {\n        \"CreatedAt\": \"2020-06-16T16:44:13-04:00\",\n        \"Driver\": \"local\",\n        \"Labels\": {},\n        \"Mountpoint: \"/var/lib/docker/volumes/vol1/_data\",\n        \"Name\": \"vol1\",\n        \"Options\": {},\n        \"Scope\": \"local\"\n    }\n]\n```", "```\n$ docker container run -it -v vol1:/container_vol --name container1 ubuntu:14.04 bash\n```", "```\nroot@acc8900e4cf1:/# echo hello > /container_vol/new_file.txt\n```", "```\nroot@acc8900e4cf1:/# ls /container_vol\n```", "```\nroot@acc8900e4cf1:/# exit\n```", "```\n$ sudo ls /var/lib/docker/volumes/vol1/_data\n```", "```\nnew_file.txt\n```", "```\n$ sudo cat /var/lib/docker/volumes/vol1/_data/new_file.txt\n```", "```\n$docker container rm -v container1\n```", "```\ncontainer1\n```", "```\n$docker volume ls\n```", "```\nDRIVER        VOLUME NAME\nLocal         vol1\n```", "```\n$docker volume rm vol1\n```", "```\nvol1\n```", "```\n$docker volume ls\n```", "```\nDRIVER        VOLUME NAME\n```", "```\n$docker container run -itd -v /newvol --name container2 ubuntu:14.04 bash\n```", "```\n$ docker volume ls\n```", "```\nDRIVER     VOLUME NAME\nLocal      8f4087212f6537aafde7eaca4d9e4a446fe99933c3af3884d\n0645b66b16fbfa4\n```", "```\n$docker container rm -fv container2\n```", "```\n$ docker volume ls\n```", "```\n$docker container run --name db1 -v db:/var/lib/postgresql/data -e POSTGRES_PASSWORD=password -d postgres\n```", "```\n$ docker container exec -it db1 psql -U postgres\n```", "```\nCREATE TABLE PEOPLE(NAME TEXT, AGE int);\n```", "```\nINSERT INTO PEOPLE VALUES('ENGY','41');\nINSERT INTO PEOPLE VALUES('AREEJ','12');\n```", "```\nSELECT * FROM PEOPLE;\n```", "```\n\\q\n```", "```\n$ docker volume ls\n```", "```\nDRIVER            VOLUME NAME\nLocal             db\n```", "```\n$ docker container rm -fv db1\n```", "```\ndb1\n```", "```\n$ docker volume ls\n```", "```\nDRIVER          VOLUME NAME\nLocal           db\n```", "```\n$docker container run --name db2 -v db:/var/lib/postgresql/data -e POSTGRES_PASSWORD=password -d postgres\n```", "```\n$ docker container exec -it db2 psql -U postgres\npostgres=# SELECT * FROM PEOPLE;\n```", "```\n\\q\n```", "```\n$ docker container rm -f db2\n```", "```\ndb2\n```", "```\n$ docker volume rm db\n```", "```\ndb\n```", "```\n$ docker container run --name db1 -e POSTGRES_PASSWORD=password -d postgres\n```", "```\n$ docker container exec -it db1 psql -U postgres\n```", "```\nCREATE TABLE PEOPlE(NAME TEXT, AGE int);\n```", "```\nINSERT INTO PEOPLE VALUES('ENGY','41');\nINSERT INTO PEOPLE VALUES('AREEJ','12');\n```", "```\nSELECT * FROM PEOPLE;\n```", "```\n\\q\n```", "```\n$ docker volume ls\n```", "```\nDRIVER     VOLUME NAME\nLocal      6fd85fbb83aa8e2169979c99d580daf2888477c654c\n62284cea15f2fc62a42c32\n```", "```\n$ docker container rm -fv db1\n```", "```\ndb1\n```", "```\n$docker volume ls\n```", "```\nDRIVER     VOLUME NAME\n```", "```\n$docker system df\n```", "```\nTYPE            TOTAL     ACTIVE     SIZE      RECLAIMABLE\nImages          6         2          1.261GB   47.9MB (75%)\nContainers      11        2          27.78MB   27.78MB (99%)\nLocal Volumes   2         2          83.26MB   OB (0%)\nBuild Cache                          0B        0B\n```", "```\n$docker system df -v\n```", "```\n$docker volume ls\n```", "```\nDRIVER    VOLUME NAME\nlocal     a7675380798d169d4d969e133f9c3c8ac17e733239330397ed\nba9e0bc05e509fc\nlocal     db\n```", "```\n$docker ps -a --filter volume=db\n```", "```\nCONTAINER ID    IMAGE     COMMAND                 CREATED\n  STATUS       PORTS         NAMES\n55c60ad38164    postgres  \"docker-entrypoint.s…\"  2 hours ago\n  Up 2 hours   5432/tcp      db_with\n```", "```\n$docker container run -v /newvol --name c1 -it ubuntu:14.04 bash\n```", "```\ncd newvol/\n```", "```\necho hello > /newvol/file1.txt\n```", "```\n$docker container run --name c2 --volumes-from c1 -it ubuntu:14.04 bash\n```", "```\ncd newvol/\nls\n```", "```\necho hello2 > /newvol/file2.txt\n```", "```\nls\n```", "```\nfile1.txt\tfile2.txt\n```", "```\ndocker attach c1\n```", "```\nls\n```", "```\nfile1.txt\tfile2.txt\n```", "```\nexit\n```", "```\n$ docker volume ls\n```", "```\nDRIVER    VOLUME NAME\nlocal     2d438bd751d5b7ec078e9ff84a11dbc1f11d05ed0f82257c\n4e8004ecc5d93350\n```", "```\n$ docker container rm -v c1\n```", "```\n$ docker volume ls\n```", "```\nDRIVER    VOLUME NAME\nlocal     2d438bd751d5b7ec078e9ff84a11dbc1f11d05ed0f82257c\n4e8004ecc5d93350\n```", "```\n$ docker container rm -fv c2\n```", "```\n$ docker volume ls\n```", "```\nDRIVER           VOLUME NAME\n```", "```\n$docker container run --name c1 -v /newvol -it ubuntu:14.04 bash\n```", "```\necho hello > /newvol/file.txt\ncd newvol\n```", "```\ncd newvol\n```", "```\nls\n```", "```\nfile.txt\n```", "```\ncat file.txt\n```", "```\nhello\n```", "```\nexit\n```", "```\n$ docker container commit c1 newimage\n```", "```\n$ docker image inspect newimage --format={{.ContainerConfig.Volumes}}\n```", "```\nmap[/newvol:{}]\n```", "```\n$ docker container run -it newimage\n```", "```\ncd newvol\nls\n```", "```\nexit\n```", "```\n$ docker container rm -f $(docker container ls -aq)\n```", "```\n$ docker container run --name c1 -it ubuntu:14.04 bash\n```", "```\nmkdir new \ncd new\n```", "```\necho hello > file.txt\n```", "```\ncat file.txt\n```", "```\nhello\n```", "```\nexit\n```", "```\n$ docker container commit c1 newimage\n```", "```\n$ docker container run -it newimage\n```", "```\nls\n```", "```\nbin  boot  dev  etc  home  lib  lib64  media  mnt  new  opt\nproc  root  run sbin  srv  sys  tmp  usr  var\n```", "```\ncd new/\nls\n```", "```\nfile.txt\n```", "```\ncat file.txt\n```", "```\nhello\n```", "```\nexit\n```", "```\nSELECT * FROM events WHERE info ->> 'status' = 'pull';\n```", "```\nSELECT * FROM events WHERE info ->> 'status' = 'destroy';\n```", "```\nSELECT info ->> 'id' as id FROM events WHERE info ->> status'     = 'destroy';\n```", "```\naccess.log       error.log\n```"]