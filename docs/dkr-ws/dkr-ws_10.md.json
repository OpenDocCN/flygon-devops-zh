["```\n# Linux\ncurl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64\n# MacOS\ncurl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-amd64 \nchmod +x minikube \nsudo mv minikube /usr/local/bin\n```", "```\nminikube start\n```", "```\nminikube ssh\n```", "```\ndocker ps --filter „name=kube-apiserver\" --filter „name=etcd\" --filter „name=kube-scheduler\" --filter „name=kube-controller-manager\" | grep -v „pause\"\n```", "```\ndocker ps --filter \"name=kube-proxy\"  | grep -v \"pause\"\n```", "```\npgrep -l kubelet\n```", "```\n2554 kubelet\n```", "```\nexit\n```", "```\nlogout\n```", "```\n# Linux\ncurl -LO https://storage.googleapis.com/kubernetes-release/release/'curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt'/bin/linux/amd64/kubectl\n# MacOS\ncurl -LO \"https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/darwin/amd64/kubectl\"\nchmod +x kubectl \nsudo mv kubectl /usr/local/bin\n```", "```\nkubectl config use-context minikube\n```", "```\nSwitched to context \"minikube\".\n```", "```\nkubectl version --short\n```", "```\nClient Version: v1.17.2\nServer Version: v1.17.0\n```", "```\nkubectl cluster-info\n```", "```\nKubernetes master is running at https://192.168.64.5:8443\nKubeDNS is running at https://192.168.64.5:8445/api/v1/\nnamespaces/kube-system/Services/kube-dns:dns/proxy\nTo further debug and diagnose cluster problems, use \n'kubectl cluster-info dump'.\n```", "```\nkubectl get nodes\n```", "```\nNAME        STATUS        ROLES        AGE        VERSION\nMinikube    Ready         master       41h        v1.17.0\n```", "```\nkubectl api-resources --output=\"name\"\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: server\nspec:\n  containers:\n  - name: main\n    image: nginx\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: server\nspec:\n  replicas: 10\n  selector:\n    matchLabels:\n      app: server\n  template:\n    metadata:\n      labels:\n        app: server\n    spec:\n      containers:\n      - name: main\n        image: nginx\n        ports:\n        - containerPort: 80 \n```", "```\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: database\nspec:\n  selector:\n    matchLabels:\n      app: mysql\n  serviceName: mysql\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: mysql\n    spec:\n      containers:\n      - name: mysql\n        image: mysql:5.7\n        env:\n        - name: MYSQL_ROOT_PASSWORD\n          value: \"root\"\n        ports:\n        - name: mysql\n          containerPort: 3306\n        volumeMounts:\n        - name: data\n          mountPath: /var/lib/mysql\n        subPath: mysql\n  volumeClaimTemplates:\n  - metadata:\n      name: data\n    spec:\n      accessModes: [\"ReadWriteOnce\"]\n      resources:\n        requests:\n          storage: 2Gi\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: my-db\nspec:\n  selector:\n    app: mysql\n  ports:\n    - protocol: TCP\n      port: 3306\n      targetPort: 3306\n```", "```\napiVersion: networking.k8s.io/v1beta1\nkind: Ingress\nmetadata:\n  name: my-db\nspec:\n  rules:\n  - host: my-db.docker-workshop.io\n    http:\n      paths:\n      - path: /\n        backend:\n          serviceName: my-db\n          servicePort: 3306\n```", "```\napiVersion: Autoscaling/v1\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: server-scaler\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: server\n  minReplicas: 1\n  maxReplicas: 10\n  targetCPUUtilizationPercentage: 50\n```", "```\nkind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  namespace: critical-project\n  name: Pod-reader\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"Pods\"]\n    verbs: [\"get\", \"watch\", \"list\"]\n```", "```\nkind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: read-Pods\n  namespace: critical-project\nsubjects:\n  - kind: User\n    name: new-intern\nroleRef:\n  kind: Role\n  name: Pod-reader\n  apiGroup: rbac.authorization.k8s.io\n```", "```\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: database\nspec:\n  selector:\n    matchLabels:\n      app: mysql\n  serviceName: mysql\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: mysql\n    spec:\n      containers:\n      - name: mysql\n        image: mysql:5.7\n        env:\n        - name: MYSQL_ROOT_PASSWORD\n          value: \"root\"\n        ports:\n        - name: mysql\n          containerPort: 3306\n        volumeMounts:\n        - name: data\n          mountPath: /var/lib/mysql\n          subPath: mysql\n  volumeClaimTemplates:\n  - metadata:\n      name: data\n    spec:\n      accessModes: [\"ReadWriteOnce\"]\n      resources:\n        requests:\n          storage: 2Gi\n```", "```\nkubectl apply -f database.yaml\n```", "```\nStatefulSet.apps/database created\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: database-service\nspec:\n  selector:\n    app: mysql\n  ports:\n    - protocol: TCP\n      port: 3306\n      targetPort: 3306\n```", "```\nkubectl apply -f database-service.yaml\n```", "```\nService/database-service created\n```", "```\napiVersion: apps/v1 \nkind: Deployment\nmetadata:\n  name: wordpress\n  labels:\n    app: wordpress\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: wordpress\n  template:\n    metadata:\n      labels:\n        app: wordpress\n    spec:\n      containers:\n      - image: wordpress:4.8-apache\n        name: wordpress\n        env:\n        - name: WORDPRESS_DB_HOST\n          value: database-Service\n        - name: WORDPRESS_DB_PASSWORD\n          value: root\n        ports:\n        - containerPort: 80\n          name: wordpress\n```", "```\nkubectl apply -f wordpress.yaml\n```", "```\nDeployment.apps/wordpress created\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: wordpress-service\nspec:\n  type: LoadBalancer\n  selector:\n    app: wordpress\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 80\n```", "```\nkubectl apply -f wordpress-service.yaml\n```", "```\nService/wordpress-service created\n```", "```\nkubectl get pods\n```", "```\nminikube service wordpress-service --url\n```", "```\nhttp://192.168.64.5:32765\n```", "```\ncurl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash\n```", "```\nhelm repo add stable https://kubernetes-charts.storage.googleapis.com/\n```", "```\n\"stable\" has been added to your repositories\n```", "```\nhelm search repo stable\n```", "```\nhelm install database stable/mysql\n```", "```\nhelm ls\n```", "```\nkubectl get all -l release=database\n```"]