["```\ndocker stats <container_name|container_id>\n```", "```\nNAME                CONTAINER           CPU %\ndocker-stress       c8cf5ad9b6eb        400.43%\n```", "```\ndocker stats --format \"table {{.Name}}\\t{{.Container}}\\t{{.CPUPerc}}\"\n```", "```\nNAME                CONTAINER           CPU %\n```", "```\ndocker run --cpus 2 <docker-image>\n```", "```\ndocker run --cpushares 256 <docker-image>\n```", "```\nFROM ubuntu\nRUN apt-get update && apt-get install stress\nCMD stress $var\n```", "```\ndocker build -t docker-stress .\n```", "```\ndocker rm -f $(docker -a -q)\n```", "```\ndocker run --rm -it -e var=\"--cpu 4 --timeout 20\" docker-stress\n```", "```\nstress: info: [6] dispatching hogs: 4 cpu, 0 io, 0 vm, 0 hdd\nstress: info: [6] successful run completed in 20s\n```", "```\ndocker stats --format \"table {{.Name}}\\t{{.Container}}\\t{{.CPUPerc}}\"\n```", "```\nNAME                CONTAINER           CPU %\n```", "```\ndocker run --rm -it -e var=\"--cpu 4 --timeout 20\" --name docker-stress docker-stress\n```", "```\nNAME                CONTAINER           CPU %\ndocker-stress       c8cf5ad9b6eb        400.43%\n```", "```\ndocker run --rm -it -e var=\"--cpu 8 --timeout 20\" --name docker-stress docker-stress\n```", "```\nNAME                CONTAINER           CPU %\ndocker-stress       8946da6ffa90        599.44%\n```", "```\ndocker run --rm -it -e var=\"--cpu 8 --timeout 20\" --cpus 2 --name docker-stress docker-stress\n```", "```\nNAME                CONTAINER           CPU %\ndocker-stress       79b32c67cbe3        208.91%\n```", "```\ndocker stats --format \"table {{.Name}}\\t{{.Container}}\\t{{.CPUPerc}}\"\n```", "```\ndocker run --rm -dit -e var=\"--cpu 8 --timeout 60\" --cpu-shares 512 --name docker-stress1 docker-stress\n```", "```\n5f617e5abebabcbc4250380b2591c692a30b3daf481b6c8d7ab8a0d1840d395f\n```", "```\ndocker run --rm -dit -e var=\"--cpu 8 --timeout 30\" --name docker-stress2 docker-stress2\n```", "```\n83712c28866dd289937a9c5fe4ea6c48a6863a7930ff663f3c251145e2fbb97a\n```", "```\nNAME                CONTAINER           CPU %\ndocker-stress1      5f617e5abeba        190.25%\ndocker-stress2      83712c28866d        401.49%\n```", "```\nNAME                CONTAINER           CPU %\nstoic_keldysh       5f617e5abeba        598.66%\n```", "```\ndocker stats --format \"table {{.Name}}\\t{{.Container}}\\t{{.MemPerc}}\\t{{.MemUsage}}\"\n```", "```\nNAME         CONTAINER          MEM %         MEM USAGE / LIMIT\n```", "```\ndocker run --memory 512MB <docker-image>\n```", "```\ndocker run --memory 512MB --memory-swap 1024MB <docker-image>\n```", "```\ndocker run --memory 512MB --oom-kill-disable <docker-image>\n```", "```\ndocker stats --format \"table {{.Name}}\\t{{.Container}}\\t{{.MemPerc}}\\t{{.MemUsage}}\"\n```", "```\nNAME        CONTAINER       MEM %         MEM USAGE / LIMIT\n```", "```\ndocker run --rm -it -e var=\"--vm 2 --timeout 20\" --name docker-stress docker-stress\n```", "```\nNAME            CONTAINER      MEM %      MEM USAGE / LIMIT\ndocker-stress   b8af08e4d79d   20.89%     415.4MiB / 1.943GiB\n```", "```\ndocker run --rm -it -e var=\"--vm 2 --vm-bytes 128MB --timeout 20\" --name stocker-stress docker-stress\n```", "```\nNAME            CONTAINER      MEM %    MEM USAGE / LIMIT\ndocker-stress   ad7630ed97b0   0.04%    904KiB / 1.943GiB\n```", "```\ndocker run --rm -it -e var=\"--vm 2 --timeout 20\" --memory 512MB --name docker-stress docker-stress\n```", "```\nNAME            CONTAINER      MEM %     MEM USAGE / LIMIT\ndocker-stress   bd84cf27e480   88.11%    451.1MiB / 512MiB\n```", "```\ndocker run --rm -dit -e var=\"--vm 6 --timeout 60\" --memory 512MB --name docker-stress1 docker-stress\nca05e244d03009531a6a67045a5b1edbef09778737cab2aec7fa92eeaaa0c487\ndocker run --rm -dit -e var=\"--vm 6 --timeout 20\" --name docker-stress2 docker-stress\n6d9cbb966b776bb162a47f5e5ff3d88daee9b0304daa668fca5ff7ae1ee887ea\n```", "```\nNAME             CONTAINER       MEM %    MEM USAGE / LIMIT\ndocker-stress1   ca05e244d030    37.10%   190MiB / 512MiB\ndocker-stress2   6d9cbb966b77    31.03%   617.3MiB / 1.943GiB\n```", "```\nNAME             CONTAINER      MEM %    MEM USAGE / LIMIT\ndocker-stress1   ca05e244d030   16.17%   82.77MiB / 512MiB\n```", "```\ndocker stats --format \"table {{.Name}}\\t{{.Container}}\\t{{.BlockIO}}\"\n```", "```\nNAME                CONTAINER           BLOCK I/O\n```", "```\ndocker run --blkio-weight <value> <docker-image>\n```", "```\ndocker run --device-write-bps <device>:<limit> <docker-image>\n```", "```\ndocker run --device-read-bps <device>:<limit> <docker-image>\n```", "```\ndocker stats --format \"table {{.Name}}\\t{{.Container}}\\t{{.BlockIO}}\" \n```", "```\ndocker run -it --rm --name docker-stress docker-stress /bin/bash\n```", "```\nNAME                CONTAINER           BLOCK I/O\ndocker-stress       0b52a034f814        0B / 0B\n```", "```\ntime dd if=/dev/zero of=disk.out bs=1M count=10 oflag=direct\n10+0 records in\n10+0 records out\n10485760 bytes (10 MB, 10 MiB) copied, 0.0087094 s, 1.2 GB/s\nreal    0m0.010s\nuser    0m0.000s\nsys     0m0.007s\n```", "```\nNAME                CONTAINER           BLOCK I/O\ndocker-stress       0b52a034f814        0B / 10.5MB\n```", "```\ndocker run -it --rm --device-write-bps /dev/sda:1mb --name docker-stress docker-stress /bin/bash\n```", "```\ntime dd if=/dev/zero of=test.out bs=1M count=10 oflag=direct\n```", "```\n10+0 records in\n10+0 records out\n10485760 bytes (10 MB, 10 MiB) copied, 10.0043 s, 1.0 MB/s\nreal    0m10.006s\nuser    0m0.000s\nsys     0m0.004s\n```", "```\n1 version: '3'\n2 services:\n3   app:\n4     container_name: docker-stress\n5     build: .\n6     environment:\n7       var: \"--cpu 2 --vm 6 --timeout 20\"\n8     deploy:\n9       resources:\n10         limits:\n11           cpus: '2'\n12           memory: 256M\n```", "```\nLABEL maintainer=\"myemailaddress@emaildomain.com\"\n```", "```\ndocker run -e var=\"<variable_name>\" <image_name>\n```", "```\n1 FROM ubuntu\n2 RUN apt-get update && apt-get install stress\n3 CMD [\"sh\",\"/tmp/stress_test.sh\"]\n```", "```\n1 #!/bin/bash\n2 \n3 /usr/bin/stress --cpu 8 --timeout 20 --vm 6 --timeout 60\n```", "```\ndocker run --rm -it -v ${PWD}/stress_test.sh:/tmp/stress_test.sh docker-stress\n```", "```\ndocker pull hadolint/hadolint\n```", "```\ndocker run hadolint/hadolint < Dockerfile\n```", "```\ndocker run hadolint/hadolint hadolint --ignore <hadolint_rule_id> - < Dockerfile\n```", "```\ndocker run --rm -i -v ${PWD}/.hadolint.yml:/.hadolint.yaml hadolint/hadolint < Dockerfile\n```", "```\ndocker pull hadolint/hadolint\n```", "```\ndocker run --rm -i hadolint/hadolint < Dockerfile\n```", "```\n/dev/stdin:1 DL3006 Always tag the version of an image explicitly\n/dev/stdin:2 DL3008 Pin versions in apt get install. Instead of \n'apt-get install <package>' use 'apt-get install \n<package>=<version>'\n/dev/stdin:2 DL3009 Delete the apt-get lists after installing \nsomething\n/dev/stdin:2 DL3015 Avoid additional packages by specifying \n'--no-install-recommends'\n/dev/stdin:2 DL3014 Use the '-y' switch to avoid manual input \n'apt-get -y install <package>'\n/dev/stdin:3 DL3025 Use arguments JSON notation for CMD \nand ENTRYPOINT arguments\n```", "```\ndocker run --rm -i hadolint/hadolint hadolint --ignore DL3008 - < Dockerfile\n```", "```\n/dev/stdin:1 DL3006 Always tag the version of an image explicitly\n/dev/stdin:2 DL3009 Delete the apt-get lists after installing \nsomething\n/dev/stdin:2 DL3015 Avoid additional packages by specifying \n'--no-install-recommends'\n/dev/stdin:2 DL3014 Use the '-y' switch to avoid manual input \n'apt-get -y install <package>'\n/dev/stdin:3 DL3025 Use arguments JSON notation for CMD and \nENTRYPOINT arguments\n```", "```\ntouch .hadolint.yml\n```", "```\nignored:\n  - DL3006\n  - DL3008\n  - DL3009\n  - DL3015\n  - DL3014\ntrustedRegistries:\n  - docker.io\n```", "```\ndocker run --rm -i -v ${PWD}/.hadolint.yml:/.hadolint.yaml hadolint/hadolint < Dockerfile\n```", "```\n/dev/stdin:3 DL3025 Use arguments JSON notation for CMD and ENTRYPOINT arguments\n```", "```\ndocker run --rm -i -v ${PWD}/.hadolint.yml:/.hadolint.yaml hadolint/hadolint hadolint -f json - < Dockerfile | jq\n```", "```\n[\n  {\n    \"line\": 3,\n    \"code\": \"DL3025\",\n    \"message\": \"Use arguments JSON notation for CMD and ENTRYPOINT arguments\",\n    \"column\": 1,\n    \"file\": \"/dev/stdin\",\n    \"level\": \"warning\"\n  }\n]\n```", "```\nhttps://www.fromlatest.io\n```", "```\nFROM ubuntu\nRUN apt-get update && apt-get install stress\nCMD stress $var\n```", "```\ngit clone https://github.com/serviceprototypinglab/dcvalidator.git\n```", "```\ncd dcvalidator\n```", "```\npip3 install -r server/requirments.txt\n```", "```\ntouch docker-compose.yml\n```", "```\nversion: '3'\nservices:\n  app:\n    container_name: docker-stress-20\n    build: .\n    environment:\n      var: \"--cpu 2 --vm 6 --timeout 20\"\n    ports:\n      - 80:8080\n      - 80:8080\n    dns: 8.8.8\n    deploy:\n      resources:\n        limits:\n          cpus: '0.50'\n          memory: 50M\n  app2:\n    container_name: docker-stress-30\n    build: .\n    environment:\n      var: \"--cpu 2 --vm 6 --timeout 30\"\n    dxeploy:\n      resources:\n        limits:\n          cpus: '0.50'\n          memory: 50M\n```", "```\npython3 validator-cli.py -f docker-compose.yml -fi 'Duplicate Keys,Duplicate ports,Typing mistakes,DNS,Duplicate expose'\n```", "```\nWarning: no kafka support\nloading compose files....\nchecking consistency...\nsyntax is ok\n= type: docker-compose\n- service:app\nDuplicate ports in service app port 80\n=================== ERROR ===================\nUnder service: app\nThe DNS is not appropriate!\n=============================================\n- service:app2\n=================== ERROR ===================\nI can not find 'dxeploy' tag under 'app2' service. \nMaybe you can use: \ndeploy\n=============================================\nservices: 2\nlabels:\ntime: 0.0s\n```", "```\npython3 validator-cli.py -u https://github.com/PacktWorkshops/The-Docker-Workshop/blob/master/Chapter11/Exercise11.03/docker-compose.yaml -fi 'Duplicate Keys,Duplicate ports,Typing mistakes,DNS,Duplicate expose'\n```", "```\nWarning: no kafka support\ndiscard cache...\nloading compose files....\nchecking consistency...\nsyntax is ok\n= type: docker-compose=\n- service:engine-api\n- service:engine-catalog\n- service:engine-simpleq\n- service:engine-policy-engine\n- service:engine-analyzer\n- service:anchore-db\nservices: 6\nlabels:\ntime: 0.6s\n```"]