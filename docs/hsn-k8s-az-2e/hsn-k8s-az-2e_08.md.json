["```\nhelm repo add stable https://kubernetes-charts.storage.googleapis.com/ \nhelm install ingress stable/nginx-ingress\n```", "```\nkubectl get service \n```", "```\nkubectl create -f guestbook-all-in-one.yaml\n```", "```\n1   apiVersion: extensions/v1beta1\n2   kind: Ingress\n3   metadata:\n4     name: simple-frontend-ingress\n5   spec:\n6     rules:\n7     - http:\n8         paths:\n9         - path: /\n10          backend:\n11            serviceName: frontend\n12            servicePort: 80\n```", "```\nkubectl apply -f simple-frontend-ingress.yaml \n```", "```\nkubectl get svc\n```", "```\nkubectl create ns cert-manager\nhelm repo add jetstack https://charts.jetstack.io\nhelm install cert-manager --namespace cert-manager jetstack/cert-manager\n```", "```\nkubectl get service\n```", "```\n1   apiVersion: cert-manager.io/v1alpha2\n2   kind: Issuer\n3   metadata:\n4     name: letsencrypt-staging\n5   spec:\n6     acme:\n7       server: https://acme-staging-v02.api.letsencrypt.org/directory\n8       email: <your e-mailaddress>\n9       privateKeySecretRef:\n10        name: letsencrypt-staging\n11      solvers:\n12      - http01:\n13          ingress:\n14            class: nginx\n```", "```\n1   apiVersion: extensions/v1beta1\n2   kind: Ingress\n3   metadata:\n4     name: simple-frontend-ingress\n5     annotations:\n6       cert-manager.io/issuer: \"letsencrypt-staging\"\n7   spec:\n8     tls:\n9     - hosts:\n10      - <your DNS prefix>.<your azure region>.cloudapp.azure.com\n11      secretName: frontend-tls\n12    rules:\n13    - host: <your DNS prefix>.<your Azure location>.cloudapp.azure.com\n14      http:\n15        paths:\n16        - path: /\n17          backend:\n18            serviceName: frontend\n19            servicePort: 80\n```", "```\nkubectl apply -f ingress-with-tls.yaml\n```", "```\nkubectl get certificate\n```", "```\nkubectl get certificaterequest\n```", "```\nkubectl describe certificaterequest\n```", "```\n1   apiVersion: cert-manager.io/v1alpha2\n2   kind: Issuer\n3   metadata:\n4     name: letsencrypt-prod\n5   spec:\n6     acme:\n7       server: https://acme-v02.api.letsencrypt.org/directory\n8       email: <your e-mail>\n9       privateKeySecretRef:\n10        name: letsencrypt-staging\n11      solvers:\n12      - http01:\n13          ingress:\n14            class: nginx\n```", "```\n1   apiVersion: extensions/v1beta1\n2   kind: Ingress\n3   metadata:\n4     name: simple-frontend-ingress\n5     annotations:\n6       cert-manager.io/issuer: \"letsencrypt-prod\"\n7   spec:\n8     tls:\n9     - hosts:\n10      - <your dns prefix>.<your azure region>.cloudapp.azure.com\n11      secretName: frontend-tls\n12    rules:\n13    - host: <your dns prefix>.<your azure region>.cloudapp.azure.com\n14      http:\n15        paths:\n16        - path: /\n17          backend:\n18            serviceName: frontend\n19            servicePort: 80\n```", "```\nkubectl create -f certificate-issuer-prod.yaml\nkubectl apply -f ingress-with-tls-prod.yaml\n```", "```\nkubectl delete -f ingress-with-tls-prod.yaml\n```", "```\n1    apiVersion: extensions/v1beta1\n2    kind: Deployment\n3    metadata:\n4      name: oauth2-proxy\n5    spec:\n6      replicas: 1\n7      selector:\n8        matchLabels:\n9          app: oauth2-proxy\n10     template:\n11       metadata:\n12         labels:\n13           app: oauth2-proxy\n14       spec:\n15         containers:\n16         - env:\n17             - name: OAUTH2_PROXY_PROVIDER\n18               value: azure\n19             - name: OAUTH2_PROXY_AZURE_TENANT\n20               value: <paste in directory ID>\n21             - name: OAUTH2_PROXY_CLIENT_ID\n22               value: <paste in application ID>\n23             - name: OAUTH2_PROXY_CLIENT_SECRET\n24               value: <paste in client secret>\n25             - name: OAUTH2_PROXY_COOKIE_SECRET\n26               value: somethingveryrandom\n27             - name: OAUTH2_PROXY_HTTP_ADDRESS\n28               value: \"0.0.0.0:4180\"\n29             - name: OAUTH2_PROXY_UPSTREAM\n30               value: \"https://<your DNS prefix>.<your azure region>.cloudapp.azure.com/\"\n31             - name: OAUTH2_PROXY_EMAIL_DOMAINS\n32               value: '*'\n33           image: quay.io/pusher/oauth2_proxy:latest\n34           imagePullPolicy: IfNotPresent\n35           name: oauth2-proxy\n36           ports:\n37           - containerPort: 4180\n38             protocol: TCP\n```", "```\nkubectl create -f oauth2_deployment.yaml\n```", "```\n1   apiVersion: v1\n2   kind: Service\n3   metadata:\n4     name: oauth2-proxy\n5     namespace: default\n6   spec:\n7     ports:\n8     - name: http\n9       port: 4180\n10      protocol: TCP\n11      targetPort: 4180\n12    selector:\n13      app: oauth2-proxy\n```", "```\nkubectl create oauth2_service.yaml\n```", "```\n1   apiVersion: extensions/v1beta1\n2   kind: Ingress\n3   metadata:\n4     name: oauth2-proxy-ingress\n5     annotations:\n6       kubernetes.io/ingress.class: nginx\n7       cert-manager.io/issuer: \"letsencrypt-prod\"\n8   spec:\n9     tls:\n10     - hosts:\n11       - <your DNS prefix>.<your azure region>.cloudapp.azure.com\n12       secretName: tls-secret\n13     rules:\n14     - host: <your DNS prefix>.<your azure region>.cloudapp.azure.com\n15       http:\n16         paths:\n17         - path: /oauth2\n18           backend:\n19             serviceName: oauth2-proxy\n20             servicePort: 4180\n```", "```\nkubectl create -f oauth2_ingress.yaml\n```", "```\n1  apiVersion: extensions/v1beta1\n2  kind: Ingress\n3  metadata:\n4    name: frontend-oauth2-ingress\n5    annotations:\n6      kubernetes.io/ingress.class: nginx\n7      nginx.ingress.kubernetes.io/auth-url: \"http://oauth2-proxy.default.svc.cluster.local:4180/oauth2/auth\"\n8      nginx.ingress.kubernetes.io/auth-signin: \"http://<your DNS prefix>.<your azure region>.cloudapp.azure.com/oauth2/start\"\n9  spec:\n10   rules:\n11   - host: <your DNS prefix>.<your azure region>.cloudapp.azure.com\n12     http:\n13       paths:\n14       - path: /\n15         backend:\n16           serviceName: frontend\n17           servicePort: 80 \n```", "```\nkubectl create -f frontend-oauth2-ingress.yaml\n```", "```\nkubectl delete -f guestbook-all-in-one.yaml\nkubectl delete -f frontend-oauth2-ingress.yaml\nkubectl delete -f oauth2_ingress.yaml\nkubectl delete -f oauth2_deployment.yaml\nkubectl delete -f oauth2_service.yaml\nkubectl delete ns cert-manager\nhelm delete ingress\n```"]